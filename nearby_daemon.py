#!/usr/bin/env python3
"""
–§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è nearby –¥–∞–Ω–Ω—ã—Ö
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤ —Ñ–æ–Ω–µ
"""

import time
import sys
from datetime import datetime
from app import app
import nearby_auto_updater

def log(message):
    """–í—ã–≤–æ–¥ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π"""
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    print(f"[{timestamp}] {message}", flush=True)

def main():
    log("="*70)
    log("  ü§ñ Nearby Daemon - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ nearby –¥–∞–Ω–Ω—ã—Ö")
    log("="*70)
    log("–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç")
    log("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 5 –ñ–ö –∑–∞ —Ä–∞–∑")
    log("="*70)
    log("")
    
    iteration = 0
    
    while True:
        iteration += 1
        
        try:
            log(f"üîÑ –ò—Ç–µ—Ä–∞—Ü–∏—è #{iteration}: –ü–æ–∏—Å–∫ –ñ–ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
            
            with app.app_context():
                # –ù–∞–π—Ç–∏ –ñ–ö —Ç—Ä–µ–±—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                complexes = nearby_auto_updater.find_complexes_needing_update(limit=5)
                
                if len(complexes) == 0:
                    log("‚úÖ –í—Å–µ –ñ–ö –∏–º–µ—é—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ nearby –¥–∞–Ω–Ω—ã–µ")
                else:
                    log(f"üìç –ù–∞–π–¥–µ–Ω–æ –ñ–ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(complexes)}")
                    
                    success_count = 0
                    error_count = 0
                    
                    for i, complex in enumerate(complexes, 1):
                        log(f"   [{i}/{len(complexes)}] –û–±–Ω–æ–≤–ª—è–µ–º: {complex.name}")
                        
                        result = nearby_auto_updater.update_nearby_for_complex(complex)
                        
                        if result['success']:
                            success_count += 1
                            log(f"      ‚úÖ –ù–∞–π–¥–µ–Ω–æ {result['objects_found']} –æ–±—ä–µ–∫—Ç–æ–≤")
                        else:
                            error_count += 1
                            log(f"      ‚ùå –û—à–∏–±–∫–∞: {result.get('error', 'Unknown')}")
                        
                        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ñ–ö
                        if i < len(complexes):
                            time.sleep(3)
                    
                    log(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: —É—Å–ø–µ—à–Ω–æ {success_count}, –æ—à–∏–±–æ–∫ {error_count}")
            
            # –ñ–¥—ë–º 30 –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            log(f"‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç...")
            log("")
            time.sleep(1800)  # 30 –º–∏–Ω—É—Ç = 1800 —Å–µ–∫—É–Ω–¥
            
        except KeyboardInterrupt:
            log("‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            log("üëã Daemon –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            sys.exit(0)
            
        except Exception as e:
            log(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            log("‚è≥ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç...")
            time.sleep(300)  # –ü—Ä–∏ –æ—à–∏–±–∫–µ - –∂–¥—ë–º 5 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    main()
