/**
 * InBack.ru - Enhanced District Maps with Boundaries
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª–∏–≥–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞–π–æ–Ω–æ–≤
 */

class DistrictMapsEnhanced {
    constructor() {
        this.primaryMap = null;
        this.secondaryMap = null;
        this.inBackMaps = null;
        this.districtSlug = null;
        this.isInitialized = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç —Ä–∞–π–æ–Ω–∞
     */
    async initializeEnhancedMaps(districtSlug, coordinates) {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è —Ä–∞–π–æ–Ω–∞:', districtSlug);
            
            this.districtSlug = districtSlug;
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ä—Ç—É —Å –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏
            await this.initializePrimaryMapWithBoundaries(coordinates);
            
            // –ó–∞–º–µ–Ω—è–µ–º –≤—Ç–æ—Ä—É—é –∫–∞—Ä—Ç—É –Ω–∞ –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ —É–±–∏—Ä–∞–µ–º –µ—ë
            this.replaceSecondaryMap();
            
            console.log('‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã —Ä–∞–π–æ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            this.isInitialized = true;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç:', error);
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ä—Ç—ã —Å –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏ –≥—Ä–∞–Ω–∏—Ü
     */
    async initializePrimaryMapWithBoundaries(coordinates) {
        try {
            // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä—Ç
            this.inBackMaps = new InBackMaps();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ä—Ç—ã
            await this.inBackMaps.initMap('district-map', 
                [coordinates.latitude, coordinates.longitude], 
                coordinates.zoom_level
            );
            
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–π–æ–Ω–∞
            const success = await this.inBackMaps.loadDistrictBoundaries(this.districtSlug);
            
            if (success) {
                console.log('‚úÖ –ì—Ä–∞–Ω–∏—Ü—ã —Ä–∞–π–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ä—Ç—É');
            } else {
                console.log('‚ö†Ô∏è –ì—Ä–∞–Ω–∏—Ü—ã —Ä–∞–π–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä');
                // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä —Ä–∞–π–æ–Ω–∞ –µ—Å–ª–∏ –Ω–µ—Ç –≥—Ä–∞–Ω–∏—Ü
                this.inBackMaps.addMarker(
                    [coordinates.latitude, coordinates.longitude],
                    coordinates.name || '–†–∞–π–æ–Ω',
                    '–†–∞–π–æ–Ω –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞ —Å –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞–º–∏'
                );
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º POI –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
            await this.loadInfrastructurePOI(coordinates);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ä—Ç—ã:', error);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç POI –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–∞ –∫–∞—Ä—Ç—É
     */
    async loadInfrastructurePOI(coordinates) {
        try {
            console.log('üè¢ –ó–∞–≥—Ä—É–∂–∞–µ–º POI –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
            
            const response = await fetch(`/api/infrastructure?lat=${coordinates.latitude}&lng=${coordinates.longitude}&radius=2000`);
            const poiData = await response.json();
            
            console.log('üìç POI –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', Object.keys(poiData));
            
            // –î–æ–±–∞–≤–ª—è–µ–º POI –º–∞—Ä–∫–µ—Ä—ã –Ω–∞ –∫–∞—Ä—Ç—É
            Object.keys(poiData).forEach(category => {
                const items = poiData[category];
                if (!items || items.length === 0) return;
                
                // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                const limitedItems = items.slice(0, 6);
                
                limitedItems.forEach(poi => {
                    if (!poi.lat || !poi.lng) return;
                    
                    const iconColor = this.getPoiIconColor(category);
                    
                    this.inBackMaps.addMarker(
                        [poi.lat, poi.lng],
                        poi.name || 'POI',
                        this.getCategoryLabel(category),
                        iconColor
                    );
                });
            });
            
            console.log('‚úÖ POI –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –∫–∞—Ä—Ç—É');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ POI:', error);
        }
    }

    /**
     * –ù–ï —Å–∫—Ä—ã–≤–∞–µ—Ç –≤—Ç–æ—Ä—É—é –∫–∞—Ä—Ç—É, –æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±–µ –¥–ª—è –ø–æ–ª–∏–≥–æ–Ω–æ–≤
     */
    replaceSecondaryMap() {
        try {
            console.log('‚ÑπÔ∏è –û—Å—Ç–∞–≤–ª—è–µ–º –æ–±–µ –∫–∞—Ä—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –¥–ª—è –ø–æ–ª–∏–≥–æ–Ω–æ–≤');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç—ã:', error);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É —É–ª–∏—Ü —Ä–∞–π–æ–Ω–∞
     */
    async loadDistrictStreets() {
        if (!this.inBackMaps || !this.districtSlug) {
            console.log('‚ö†Ô∏è –ö–∞—Ä—Ç–∞ –∏–ª–∏ —Ä–∞–π–æ–Ω –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            return;
        }

        try {
            console.log('üõ£Ô∏è –ó–∞–≥—Ä—É–∂–∞–µ–º —É–ª–∏—Ü—ã —Ä–∞–π–æ–Ω–∞...');
            
            // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —É–ª–∏—Ü—ã —Ä–∞–π–æ–Ω–∞
            const mainStreets = ['krasnaya', 'severnaya', 'stavropol-skaya'];
            
            for (const streetSlug of mainStreets) {
                await this.inBackMaps.loadStreetHighlight(streetSlug);
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É–ª–∏—Ü:', error);
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ü–≤–µ—Ç –∏–∫–æ–Ω–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ POI
     */
    getPoiIconColor(category) {
        const colors = {
            'education': 'green',
            'medical': 'red', 
            'shopping': 'orange',
            'transport': 'blue',
            'leisure': 'violet',
            'finance': 'yellow',
            'sports': 'pink'
        };
        return colors[category] || 'gray';
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    getCategoryLabel(category) {
        const labels = {
            'education': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
            'medical': '–ú–µ–¥–∏—Ü–∏–Ω–∞',
            'shopping': '–¢–æ—Ä–≥–æ–≤–ª—è',
            'transport': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
            'leisure': '–î–æ—Å—É–≥',
            'finance': '–§–∏–Ω–∞–Ω—Å—ã',
            'sports': '–°–ø–æ—Ä—Ç'
        };
        return labels[category] || category;
    }

    /**
     * –û—á–∏—â–∞–µ—Ç –≤—Å–µ –∫–∞—Ä—Ç—ã
     */
    clearAllMaps() {
        if (this.inBackMaps) {
            this.inBackMaps.clearAll();
        }
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ POI
     */
    togglePOICategory(category, show) {
        // –õ–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ POI –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ POI:', category, show);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
window.DistrictMapsEnhanced = DistrictMapsEnhanced;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–∞–π–æ–Ω–∞
    if (document.getElementById('district-map') && window.districtCoords) {
        console.log('üó∫Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã...');
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ InBackMaps –∫–ª–∞—Å—Å–∞
        function waitForInBackMaps() {
            if (typeof InBackMaps === 'undefined') {
                setTimeout(waitForInBackMaps, 100);
                return;
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã
            const enhancedMaps = new DistrictMapsEnhanced();
            const districtSlug = window.location.pathname.split('/').pop();
            
            enhancedMaps.initializeEnhancedMaps(districtSlug, window.districtCoords);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
            window.enhancedDistrictMaps = enhancedMaps;
        }
        
        waitForInBackMaps();
    }
});