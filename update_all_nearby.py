#!/usr/bin/env python3
"""
–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ nearby –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –ñ–ö
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 update_all_nearby.py
"""

import time
from app import app, db, ResidentialComplex
import nearby_auto_updater

def main():
    print("="*70)
    print("  –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ nearby –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –í–°–ï–• –ñ–ö")
    print("="*70)
    print()
    
    with app.app_context():
        # –ù–∞–π—Ç–∏ –í–°–ï –ñ–ö —Ç—Ä–µ–±—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–±–µ–∑ –ª–∏–º–∏—Ç–∞)
        complexes = nearby_auto_updater.find_complexes_needing_update(limit=1000)
        
        total = len(complexes)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ñ–ö —Ç—Ä–µ–±—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {total}")
        
        if total == 0:
            print("\n‚úÖ –í—Å–µ –ñ–ö —É–∂–µ –∏–º–µ—é—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ nearby –¥–∞–Ω–Ω—ã–µ!")
            return
        
        print(f"\n‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ... (–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ {total * 20 // 60} –º–∏–Ω—É—Ç)")
        print()
        
        success_count = 0
        error_count = 0
        
        for i, complex in enumerate(complexes, 1):
            print(f"\n[{i}/{total}] ", end="")
            
            result = nearby_auto_updater.update_nearby_for_complex(complex)
            
            if result['success']:
                success_count += 1
            else:
                error_count += 1
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ñ–ö —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API
            if i < total:
                time.sleep(3)
        
        print("\n" + "="*70)
        print("  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        print("="*70)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {success_count}")
        print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
        print(f"üìä –ò—Ç–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total}")
        print()
        
        if success_count > 0:
            print("üéâ –ì–æ—Ç–æ–≤–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ.")

if __name__ == "__main__":
    main()
