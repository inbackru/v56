#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä sitemap –¥–ª—è InBack.ru
–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç—É —Å–∞–π—Ç–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç Flask url_for
"""

import os
import json
import re
from datetime import datetime


def street_slug(street_name):
    """Convert street name to URL slug with transliteration"""
    import re
    
    # Transliteration mapping for Russian to Latin (matching app.py)
    translit_map = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo',
        '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
        '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
        '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya'
    }
    
    # Clean the name
    name = str(street_name).strip().lower()
    # Remove extra characters
    name = re.sub(r'[¬´¬ª"\(\)\.,:;]', '', name)
    
    # Transliterate
    result = ''
    for char in name:
        result += translit_map.get(char, char)
    
    # Replace spaces with hyphens and clean up
    result = re.sub(r'\s+', '-', result)
    result = re.sub(r'-+', '-', result)
    result = result.strip('-')
    
    return result

def get_streets_data():
    """–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º —É–ª–∏—Ü–∞–º"""
    streets = []
    try:
        with open('data/streets.json', 'r', encoding='utf-8') as f:
            streets_data = json.load(f)
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ–±—ä–µ–∫—Ç–æ–≤ (–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–Ω–∞—á–∞–ª–∞) –∏ –±–µ—Ä–µ–º –í–°–ï —É–ª–∏—Ü—ã
            sorted_streets = sorted(streets_data, key=lambda x: x.get('properties_count', 0), reverse=True)
            streets = [street['name'] for street in sorted_streets if street.get('name')]
    except Exception as e:
        print(f"Error loading streets: {e}")
    return streets

def generate_full_sitemap():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π XML –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞"""
    
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞ InBack.ru...")
    
    base_url = "https://inback.ru"
    today = datetime.now().strftime('%Y-%m-%d')
    
    sitemap_xml = '''<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
        http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
'''

    url_count = 0
    
    # 1. –ì–ª–∞–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    main_pages = [
        {'url': '/', 'priority': '1.0', 'changefreq': 'daily'},
        {'url': '/properties', 'priority': '0.9', 'changefreq': 'daily'},
        {'url': '/residential-complexes', 'priority': '0.9', 'changefreq': 'daily'},
        {'url': '/developers', 'priority': '0.8', 'changefreq': 'weekly'},
        {'url': '/map', 'priority': '0.8', 'changefreq': 'weekly'},
    ]
    
    # 2. –û –∫–æ–º–ø–∞–Ω–∏–∏
    company_pages = [
        {'url': '/about', 'priority': '0.8', 'changefreq': 'monthly'},
        {'url': '/how-it-works', 'priority': '0.8', 'changefreq': 'monthly'},
        {'url': '/reviews', 'priority': '0.7', 'changefreq': 'weekly'},
        {'url': '/contacts', 'priority': '0.7', 'changefreq': 'monthly'},
        {'url': '/security', 'priority': '0.6', 'changefreq': 'monthly'},
        {'url': '/careers', 'priority': '0.5', 'changefreq': 'monthly'},
    ]
    
    # 3. –ö–æ–Ω—Ç–µ–Ω—Ç
    content_pages = [
        {'url': '/blog', 'priority': '0.8', 'changefreq': 'daily'},
        {'url': '/news', 'priority': '0.7', 'changefreq': 'daily'},
        {'url': '/streets', 'priority': '0.7', 'changefreq': 'weekly'},
        {'url': '/districts', 'priority': '0.7', 'changefreq': 'weekly'},
    ]
    
    # 4. –ò–ø–æ—Ç–µ–∫–∞
    mortgage_pages = [
        {'url': '/ipoteka', 'priority': '0.8', 'changefreq': 'weekly'},
        {'url': '/family-mortgage', 'priority': '0.7', 'changefreq': 'monthly'},
        {'url': '/it-mortgage', 'priority': '0.7', 'changefreq': 'monthly'},
        {'url': '/military-mortgage', 'priority': '0.7', 'changefreq': 'monthly'},
        {'url': '/developer-mortgage', 'priority': '0.7', 'changefreq': 'monthly'},
        {'url': '/maternal-capital', 'priority': '0.7', 'changefreq': 'monthly'},
    ]
    
    # 5. –°–µ—Ä–≤–∏—Å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    service_pages = [
        {'url': '/comparison', 'priority': '0.6', 'changefreq': 'weekly'},
        {'url': '/complex-comparison', 'priority': '0.6', 'changefreq': 'weekly'},
        {'url': '/favorites', 'priority': '0.5', 'changefreq': 'daily'},
        {'url': '/thank-you', 'priority': '0.3', 'changefreq': 'yearly'},
    ]
    
    # 6. –†–∞–π–æ–Ω—ã –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞
    districts = [
        'tsentralnyy', 'zapadny', 'karasunsky', 'festivalny', 'gidrostroitelei', 
        'yubileynyy', 'pashkovsky', 'prikubansky', 'enka', 'solnechny', 
        'panorama', 'vavilova', 'yablonovskiy', 'uchhoz-kuban', 'dubinka',
        'komsomolsky', 'kolosistiy', 'kozhzavod', 'kubansky', 'krasnodarskiy',
        'aviagorodok', 'avrora', 'basket-hall', 'berezovy', 'cheremushki', 
        'gorkhutor', 'hbk', 'kalinino', 'kkb', 'ksk', 'krasnaya-ploshad', 
        '40-let-pobedy', 'tsiolkovskogo', 'stasova', 'kalinovaya', 
        'kotliarevskogo', 'akademika-lukianenko', 'starokorsunskaya',
        'im-40-letiya-pobedy', 'rossiyskaya', 'turgenevsky', 'slavyansky',
        'novorossiysky', 'tbilissky', 'severo-kavkazsky', 'adygeysky',
        'prochorzhsky', 'kievsky', 'dneprovskiy', 'moldavsky', 'sovetsky',
        'universitetsky', 'industrialny', 'shevchenko'
    ]
    
    # 7. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª–æ–≥–∞
    blog_categories = ['cashback', 'districts', 'mortgage', 'market', 'legal', 'tips']
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –≤ sitemap
    all_pages = main_pages + company_pages + content_pages + mortgage_pages + service_pages
    
    print("üìÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...")
    for page in all_pages:
        sitemap_xml += f'''  <url>
    <loc>{base_url}{page['url']}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>{page['changefreq']}</changefreq>
    <priority>{page['priority']}</priority>
  </url>
'''
        url_count += 1
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤
    print("üìç –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤...")
    for district in districts:
        sitemap_xml += f'''  <url>
    <loc>{base_url}/districts/{district}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.7</priority>
  </url>
'''
        url_count += 1
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —É–ª–∏—Ü
    print("üõ£Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —É–ª–∏—Ü –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞...")
    streets = get_streets_data()
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(streets)} —É–ª–∏—Ü –¥–ª—è sitemap")
    for street_name in streets:
        street_slug_value = street_slug(street_name)
        if street_slug_value:
            sitemap_xml += f'''  <url>
    <loc>{base_url}/street/{street_slug_value}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.6</priority>
  </url>
'''
            url_count += 1
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–ª–æ–≥–∞
    print("üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–ª–æ–≥–∞...")
    for category in blog_categories:
        sitemap_xml += f'''  <url>
    <loc>{base_url}/blog/category/{category}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>daily</changefreq>
    <priority>0.7</priority>
  </url>
'''
        url_count += 1
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (ID 1-50)
    print("üè† –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏...")
    for i in range(1, 51):
        sitemap_xml += f'''  <url>
    <loc>{base_url}/object/{i}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>
'''
        url_count += 1
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∂–∏–ª—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤ (ID 1-20)
    print("üè¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∂–∏–ª—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤...")
    for i in range(1, 21):
        sitemap_xml += f'''  <url>
    <loc>{base_url}/residential_complex/{i}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>
'''
        url_count += 1
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤ (ID 1-10)
    print("üèóÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤...")
    for i in range(1, 11):
        sitemap_xml += f'''  <url>
    <loc>{base_url}/developer/{i}</loc>
    <lastmod>{today}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.7</priority>
  </url>
'''
        url_count += 1
    
    sitemap_xml += '</urlset>'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    os.makedirs('static', exist_ok=True)
    with open('static/sitemap.xml', 'w', encoding='utf-8') as f:
        f.write(sitemap_xml)
    
    print(f"‚úÖ –ü–æ–ª–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!")
    print(f"üìä –í—Å–µ–≥–æ URL: {url_count}")
    print(f"üìÅ –§–∞–π–ª: static/sitemap.xml")
    print(f"üåê –î–æ—Å—Ç—É–ø: https://inback.ru/sitemap.xml")
    
    return sitemap_xml

def create_robots_txt():
    """–°–æ–∑–¥–∞–Ω–∏–µ robots.txt"""
    
    robots_content = f"""User-agent: *
Allow: /

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–æ–≤
Disallow: /admin/
Disallow: /manager/
Disallow: /api/
Disallow: /uploads/
Disallow: /static/temp/
Disallow: /login
Disallow: /logout
Disallow: *.pdf$
Disallow: /*?print=*
Disallow: /*?*sort=*
Disallow: /*?*filter=*

# –†–∞–∑—Ä–µ—à–∞–µ–º –≤–∞–∂–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
Allow: /static/css/
Allow: /static/js/
Allow: /static/images/
Allow: /static/sitemap.xml
Allow: /sitemap.xml

# –í—Ä–µ–º—è –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
Crawl-delay: 1

# –ö–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞
Sitemap: https://inback.ru/sitemap.xml

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤
User-agent: Googlebot
Crawl-delay: 1
Allow: /api/properties
Allow: /api/residential-complexes

User-agent: Yandex
Crawl-delay: 1
Allow: /api/properties
Allow: /api/residential-complexes

User-agent: Bingbot  
Crawl-delay: 2

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤
User-agent: SemrushBot
Disallow: /

User-agent: AhrefsBot
Disallow: /

User-agent: MJ12bot
Disallow: /
"""
    
    os.makedirs('static', exist_ok=True)
    with open('static/robots.txt', 'w', encoding='utf-8') as f:
        f.write(robots_content)
    
    print("ü§ñ robots.txt –æ–±–Ω–æ–≤–ª–µ–Ω")

if __name__ == '__main__':
    print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞ InBack.ru")
    generate_full_sitemap()
    create_robots_txt()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! Sitemap –∏ robots.txt —Å–æ–∑–¥–∞–Ω—ã")