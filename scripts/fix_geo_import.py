#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import pandas as pd
import os
from app import app, db
from sqlalchemy import text
import uuid

def safe_value(value):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π, –≤–∫–ª—é—á–∞—è NaN"""
    if pd.isna(value) or str(value) == 'nan' or value is None:
        return None
    if isinstance(value, str) and value.strip() == '':
        return None
    return value

def import_districts_safe():
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ä–∞–π–æ–Ω–æ–≤"""
    
    with app.app_context():
        print("üó∫Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ä–∞–π–æ–Ω–æ–≤...")
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            db.session.execute(text("""
                CREATE TABLE IF NOT EXISTS districts (
                    id INTEGER PRIMARY KEY,
                    name TEXT NOT NULL,
                    slug TEXT UNIQUE,
                    latitude DECIMAL(10,6),
                    longitude DECIMAL(10,6), 
                    zoom_level INTEGER,
                    description TEXT,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    distance_to_center DECIMAL(10,2),
                    infrastructure_data TEXT
                );
            """))
            
            # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            db.session.execute(text("DELETE FROM districts"))
            db.session.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–æ–≤ –æ—á–∏—â–µ–Ω–∞")
            
            # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            districts_df = pd.read_excel('attached_assets/districts (7)_1757524447190.xlsx')
            print(f"üìç –ù–∞–π–¥–µ–Ω–æ {len(districts_df)} —Ä–∞–π–æ–Ω–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞")
            
            imported = 0
            errors = 0
            
            for _, row in districts_df.iterrows():
                try:
                    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                    district_id = int(row['id'])
                    name = str(row['name'])
                    slug = safe_value(row['slug']) or f"district-{district_id}-{uuid.uuid4().hex[:8]}"
                    lat = safe_value(row['latitude'])
                    lon = safe_value(row['longitude'])
                    zoom = safe_value(row['zoom_level'])
                    desc = safe_value(row.get('description', ''))
                    distance = safe_value(row.get('distance_to_center'))
                    infra = safe_value(row.get('infrastructure_data')) or '{}'
                    
                    # –ü–æ–ø—ã—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    try:
                        db.session.execute(text("""
                            INSERT INTO districts (id, name, slug, latitude, longitude, zoom_level, 
                                                 description, distance_to_center, infrastructure_data)
                            VALUES (:id, :name, :slug, :lat, :lon, :zoom, :desc, :distance, :infra)
                        """), {
                            'id': district_id,
                            'name': name,
                            'slug': slug,
                            'lat': lat,
                            'lon': lon,
                            'zoom': zoom,
                            'desc': desc,
                            'distance': distance,
                            'infra': str(infra)
                        })
                        db.session.commit()
                        imported += 1
                        
                        if imported % 10 == 0:
                            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported} —Ä–∞–π–æ–Ω–æ–≤...")
                            
                    except Exception as insert_error:
                        db.session.rollback()
                        errors += 1
                        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ —Ä–∞–π–æ–Ω–∞ {name}: {insert_error}")
                        
                except Exception as e:
                    errors += 1
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–π–æ–Ω–∞ {row.get('name', 'Unknown')}: {e}")
            
            print(f"üìä –ò–º–ø–æ—Ä—Ç —Ä–∞–π–æ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω:")
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {imported}")
            print(f"   ‚ùå –û—à–∏–±–æ–∫: {errors}")
            return imported
            
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ä–∞–π–æ–Ω–æ–≤: {e}")
            db.session.rollback()
            return 0

def import_streets_safe():
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —É–ª–∏—Ü"""
    
    with app.app_context():
        print("üõ£Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç —É–ª–∏—Ü...")
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            db.session.execute(text("""
                CREATE TABLE IF NOT EXISTS streets (
                    id INTEGER PRIMARY KEY,
                    name TEXT NOT NULL,
                    slug TEXT UNIQUE,
                    district_id INTEGER,
                    latitude DECIMAL(10,6),
                    longitude DECIMAL(10,6),
                    zoom_level INTEGER,
                    street_type TEXT,
                    description TEXT,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    distance_to_center DECIMAL(10,2),
                    infrastructure_data TEXT,
                    FOREIGN KEY (district_id) REFERENCES districts (id)
                );
            """))
            
            # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            db.session.execute(text("DELETE FROM streets"))
            db.session.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É–ª–∏—Ü –æ—á–∏—â–µ–Ω–∞")
            
            # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            streets_df = pd.read_excel('attached_assets/streets (2)_1757524447189.xlsx')
            print(f"üõ£Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(streets_df)} —É–ª–∏—Ü –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞")
            
            imported = 0
            errors = 0
            
            for _, row in streets_df.iterrows():
                try:
                    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                    street_id = int(row['id'])
                    name = str(row['name'])
                    slug = safe_value(row['slug']) or f"street-{street_id}-{uuid.uuid4().hex[:8]}"
                    district_id = safe_value(row.get('district_id'))
                    lat = safe_value(row['latitude'])
                    lon = safe_value(row['longitude'])
                    zoom = safe_value(row['zoom_level'])
                    street_type = safe_value(row.get('street_type'))
                    desc = safe_value(row.get('description'))
                    distance = safe_value(row.get('distance_to_center'))
                    infra = safe_value(row.get('infrastructure_data')) or '{}'
                    
                    # –ü–æ–ø—ã—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    try:
                        db.session.execute(text("""
                            INSERT INTO streets (id, name, slug, district_id, latitude, longitude, 
                                               zoom_level, street_type, description, distance_to_center, 
                                               infrastructure_data)
                            VALUES (:id, :name, :slug, :district_id, :lat, :lon, :zoom, :type, 
                                   :desc, :distance, :infra)
                        """), {
                            'id': street_id,
                            'name': name,
                            'slug': slug,
                            'district_id': district_id,
                            'lat': lat,
                            'lon': lon,
                            'zoom': zoom,
                            'type': street_type,
                            'desc': desc,
                            'distance': distance,
                            'infra': str(infra)
                        })
                        db.session.commit()
                        imported += 1
                        
                        if imported % 200 == 0:
                            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported} —É–ª–∏—Ü...")
                            
                    except Exception as insert_error:
                        db.session.rollback()
                        errors += 1
                        # –ù–µ –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –æ—à–∏–±–∫—É –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
                        if errors <= 10:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ —É–ª–∏—Ü—ã {name}: {insert_error}")
                        elif errors == 11:
                            print("‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º...")
                        
                except Exception as e:
                    errors += 1
                    if errors <= 10:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–ª–∏—Ü—ã {row.get('name', 'Unknown')}: {e}")
            
            print(f"üìä –ò–º–ø–æ—Ä—Ç —É–ª–∏—Ü –∑–∞–≤–µ—Ä—à–µ–Ω:")
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {imported}")
            print(f"   ‚ùå –û—à–∏–±–æ–∫: {errors}")
            return imported
            
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —É–ª–∏—Ü: {e}")
            db.session.rollback()
            return 0

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    districts_imported = import_districts_safe()
    streets_imported = import_streets_safe()
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    with app.app_context():
        districts_count = db.session.execute(text("SELECT COUNT(*) FROM districts")).scalar()
        streets_count = db.session.execute(text("SELECT COUNT(*) FROM streets")).scalar()
        
        print(f"\nüéâ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   üìç –†–∞–π–æ–Ω–æ–≤ –≤ –±–∞–∑–µ: {districts_count}")
        print(f"   üõ£Ô∏è –£–ª–∏—Ü –≤ –±–∞–∑–µ: {streets_count}")
        
        if districts_count > 0:
            # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
            sample_districts = db.session.execute(text("""
                SELECT name, latitude, longitude 
                FROM districts 
                WHERE latitude IS NOT NULL AND longitude IS NOT NULL 
                LIMIT 3
            """)).fetchall()
            
            if sample_districts:
                print(f"   üó∫Ô∏è –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–π–æ–Ω–æ–≤ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏:")
                for d in sample_districts:
                    print(f"     - {d.name}: {d.latitude}, {d.longitude}")
    
    print("‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")