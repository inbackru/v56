#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

def import_districts_to_database():
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ä–∞–π–æ–Ω—ã –∏–∑ JSON –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    database_url = os.environ.get('DATABASE_URL')
    if not database_url:
        print("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        engine = create_engine(database_url)
        Session = sessionmaker(bind=engine)
        session = Session()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª —Å —Ä–∞–π–æ–Ω–∞–º–∏
        with open('data/extracted_districts.json', 'r', encoding='utf-8') as f:
            districts_data = json.load(f)
        
        print(f"üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(districts_data)} —Ä–∞–π–æ–Ω–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–π–æ–Ω–æ–≤ –≤ –±–∞–∑–µ
        result = session.execute(text("SELECT COUNT(*) as count FROM districts")).fetchone()
        current_count = result.count
        print(f"üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–π–æ–Ω–æ–≤ –≤ –±–∞–∑–µ: {current_count}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö slug'–æ–≤
        existing_slugs = set()
        existing_districts = session.execute(text("SELECT slug FROM districts")).fetchall()
        for district in existing_districts:
            existing_slugs.add(district.slug)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–π–æ–Ω—ã
        imported_count = 0
        skipped_count = 0
        
        for district in districts_data:
            name = district['name']
            slug = district['slug']
            description = district['description']
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ä–∞–π–æ–Ω
            if slug in existing_slugs:
                skipped_count += 1
                continue
            
            try:
                # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–∞–π–æ–Ω
                session.execute(text("""
                    INSERT INTO districts (name, slug, description, zoom_level, created_at, updated_at) 
                    VALUES (:name, :slug, :description, 12, NOW(), NOW())
                """), {
                    'name': name,
                    'slug': slug,
                    'description': description
                })
                
                existing_slugs.add(slug)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
                imported_count += 1
                
                if imported_count % 10 == 0:
                    print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_count} —Ä–∞–π–æ–Ω–æ–≤...")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Ä–∞–π–æ–Ω–∞ '{name}': {e}")
                continue
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        session.close()
        
        print(f"\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ä–∞–π–æ–Ω–æ–≤: {imported_count}")
        print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {skipped_count}")
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–π–æ–Ω–æ–≤: {current_count + imported_count}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    success = import_districts_to_database()
    if success:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è —Ä–∞–π–æ–Ω–æ–≤:")
        print("python run_coordinates_batch.py 100")
    else:
        sys.exit(1)