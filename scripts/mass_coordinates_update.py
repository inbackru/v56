#!/usr/bin/env python3
"""
–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –≤—Å–µ—Ö —Ä–∞–π–æ–Ω–æ–≤, –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–æ–≤ –∏ —É–ª–∏—Ü
"""

import os
import time
import requests
from models import db, District, Street
from app import app

def get_yandex_coordinates(query, api_key):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —á–µ—Ä–µ–∑ Yandex Geocoder API"""
    try:
        geocoder_url = "https://geocode-maps.yandex.ru/1.x/"
        params = {
            'apikey': api_key,
            'geocode': query,
            'format': 'json',
            'results': 1,
            'lang': 'ru_RU'
        }
        
        response = requests.get(geocoder_url, params=params, timeout=10)
        if response.status_code != 200:
            print(f"  ‚ùå HTTP {response.status_code} for: {query}")
            return None
            
        data = response.json()
        
        if 'response' not in data:
            print(f"  ‚ùå No response data for: {query}")
            return None
            
        geo_objects = data['response']['GeoObjectCollection']['featureMember']
        
        if not geo_objects:
            print(f"  ‚ùå No geo objects found for: {query}")
            return None
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        point = geo_objects[0]['GeoObject']['Point']['pos']
        lng, lat = map(float, point.split())
        
        print(f"  ‚úÖ Found coordinates: {lat}, {lng} for: {query}")
        return {'latitude': lat, 'longitude': lng}
        
    except Exception as e:
        print(f"  ‚ùå Error geocoding {query}: {str(e)}")
        return None

def update_districts_coordinates():
    """–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Å–µ—Ö —Ä–∞–π–æ–Ω–æ–≤"""
    print("üèòÔ∏è –û–±–Ω–æ–≤–ª—è—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–∞–π–æ–Ω–æ–≤...")
    
    api_key = os.environ.get('YANDEX_MAPS_API_KEY')
    if not api_key:
        print("‚ùå YANDEX_MAPS_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    districts = District.query.all()
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(districts)} —Ä–∞–π–æ–Ω–æ–≤")
    
    updated = 0
    for district in districts:
        if district.latitude and district.longitude:
            print(f"‚è≠Ô∏è {district.name} —É–∂–µ –∏–º–µ–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –ø—Ä–æ–ø—É—Å–∫–∞—é")
            continue
            
        print(f"\nüìç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–∞–π–æ–Ω: {district.name}")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        queries = [
            f"{district.name} –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
            f"{district.name} —Ä–∞–π–æ–Ω –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
            f"{district.name} –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
            f"–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω {district.name} –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä"
        ]
        
        coordinates = None
        for query in queries:
            print(f"  üîç –ü—Ä–æ–±—É—é –∑–∞–ø—Ä–æ—Å: {query}")
            coordinates = get_yandex_coordinates(query, api_key)
            if coordinates:
                break
            time.sleep(0.5)  # –ò–∑–±–µ–≥–∞–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ API
        
        if coordinates:
            district.latitude = coordinates['latitude']
            district.longitude = coordinates['longitude']
            db.session.commit()
            updated += 1
            print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ä–∞–π–æ–Ω: {district.name}")
        else:
            print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è: {district.name}")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated} —Ä–∞–π–æ–Ω–æ–≤ –∏–∑ {len(districts)}")

def update_streets_coordinates():
    """–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Å–µ—Ö —É–ª–∏—Ü"""
    print("\nüõ£Ô∏è –û–±–Ω–æ–≤–ª—è—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–ª–∏—Ü...")
    
    api_key = os.environ.get('YANDEX_MAPS_API_KEY')
    if not api_key:
        print("‚ùå YANDEX_MAPS_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —É–ª–∏—Ü—ã –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    streets = Street.query.filter(
        (Street.latitude.is_(None)) | 
        (Street.longitude.is_(None))
    ).all()
    
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(streets)} —É–ª–∏—Ü –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
    
    updated = 0
    for i, street in enumerate(streets, 1):
        print(f"\nüìç [{i}/{len(streets)}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —É–ª–∏—Ü—É: {street.name}")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        queries = [
            f"—É–ª–∏—Ü–∞ {street.name} –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
            f"{street.name} —É–ª–∏—Ü–∞ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
            f"{street.name} –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä"
        ]
        
        coordinates = None
        for query in queries:
            print(f"  üîç –ü—Ä–æ–±—É—é –∑–∞–ø—Ä–æ—Å: {query}")
            coordinates = get_yandex_coordinates(query, api_key)
            if coordinates:
                break
            time.sleep(0.5)
        
        if coordinates:
            street.latitude = coordinates['latitude']
            street.longitude = coordinates['longitude']
            db.session.commit()
            updated += 1
            print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —É–ª–∏—Ü–∞: {street.name}")
        else:
            print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è: {street.name}")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        
        # –ö–∞–∂–¥—ã–µ 50 —É–ª–∏—Ü –¥–µ–ª–∞–µ–º –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—É—é –ø–∞—É–∑—É
        if i % 50 == 0:
            print(f"\n‚è∏Ô∏è –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ {i} —É–ª–∏—Ü...")
            time.sleep(5)
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated} —É–ª–∏—Ü –∏–∑ {len(streets)}")

if __name__ == "__main__":
    with app.app_context():
        print("üöÄ –ó–∞–ø—É—Å–∫ –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç...")
        
        # –°–Ω–∞—á–∞–ª–∞ —Ä–∞–π–æ–Ω—ã
        update_districts_coordinates()
        
        # –ó–∞—Ç–µ–º —É–ª–∏—Ü—ã
        update_streets_coordinates()
        
        print("\nüéâ –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")