#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""
import json
import random
from datetime import datetime, timedelta
from app import app, db
from models import (
    User, Manager, Admin, BlogPost, Collection, CollectionProperty,
    CashbackApplication, FavoriteProperty, SavedSearch, UserNotification
)

def load_properties_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ JSON"""
    try:
        with open('data/properties.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        print("‚ö†Ô∏è –§–∞–π–ª properties.json –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        return []

def create_favorite_properties(users, properties_data):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤"""
    print("‚ù§Ô∏è –°–æ–∑–¥–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã...")
    
    created_count = 0
    for i, user in enumerate(users[:4]):  # –î–ª—è –ø–µ—Ä–≤—ã—Ö 4 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        # –°–æ–∑–¥–∞–µ–º 3-7 –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        favorites_count = random.randint(3, 7)
        
        for j in range(favorites_count):
            property_id = f'fav_{user.id}_{j}'
            existing = FavoriteProperty.query.filter_by(user_id=user.id, property_id=property_id).first()
            
            if not existing:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ
                if properties_data and j < len(properties_data):
                    prop = properties_data[j]
                    property_name = f"{prop.get('rooms', '2')}-–∫–æ–º–Ω –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                    property_size = prop.get('area', random.randint(40, 120))
                    property_price = prop.get('price', random.randint(4000000, 15000000))
                    complex_name = prop.get('complex', f'–ñ–ö –¢–µ—Å—Ç–æ–≤—ã–π-{j+1}')
                    developer_name = prop.get('developer', '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫')
                else:
                    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                    rooms = random.choice(['1', '2', '3', '4'])
                    property_name = f"{rooms}-–∫–æ–º–Ω –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                    property_size = random.randint(35, 150)
                    property_price = random.randint(3500000, 18000000)
                    complex_name = f'–ñ–ö {random.choice(["–°–æ–ª–Ω–µ—á–Ω—ã–π", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "–ü—Ä–µ–º—å–µ—Ä", "–≠–ª–∏—Ç–Ω—ã–π", "–ö–æ–º—Ñ–æ—Ä—Ç"])}-{j+1}'
                    developer_name = random.choice(['–ì–ö "–ò–Ω–≤–µ—Å—Ç—Å—Ç—Ä–æ–π–∫—É–±"', '–ü–ò–ö', '–°–∞–º–æ–ª–µ—Ç –î–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç'])
                
                cashback_amount = int(property_price * random.uniform(0.015, 0.025))
                
                favorite = FavoriteProperty(
                    user_id=user.id,
                    property_id=property_id,
                    property_name=property_name,
                    property_type=rooms if 'rooms' in locals() else random.choice(['1', '2', '3']),
                    property_size=property_size,
                    property_price=property_price,
                    complex_name=complex_name,
                    developer_name=developer_name,
                    property_image=f'https://images.unsplash.com/photo-{random.randint(1500000000, 1700000000)}-apartment',
                    cashback_amount=cashback_amount,
                    cashback_percent=round(cashback_amount / property_price * 100, 2)
                )
                db.session.add(favorite)
                created_count += 1
    
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ {created_count} –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤")

def create_cashback_applications(users, managers):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–µ—à–±–µ–∫"""
    print("üí∞ –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–µ—à–±–µ–∫...")
    
    created_count = 0
    statuses = ['–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', '–û–¥–æ–±—Ä–µ–Ω–∞', '–í—ã–ø–ª–∞—á–µ–Ω–∞', '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞']
    
    for user in users[:5]:  # –î–ª—è –ø–µ—Ä–≤—ã—Ö 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        applications_count = random.randint(1, 4)
        
        for i in range(applications_count):
            property_id = f'app_{user.id}_{i}'
            existing = CashbackApplication.query.filter_by(user_id=user.id, property_id=property_id).first()
            
            if not existing:
                rooms = random.choice(['1', '2', '3', '4'])
                property_size = random.randint(40, 120)
                property_price = random.randint(4000000, 16000000)
                cashback_amount = int(property_price * random.uniform(0.015, 0.03))
                status = random.choice(statuses)
                
                app_date = datetime.utcnow() - timedelta(days=random.randint(5, 90))
                approved_date = app_date + timedelta(days=random.randint(1, 14)) if status in ['–û–¥–æ–±—Ä–µ–Ω–∞', '–í—ã–ø–ª–∞—á–µ–Ω–∞'] else None
                payout_date = approved_date + timedelta(days=random.randint(7, 30)) if status == '–í—ã–ø–ª–∞—á–µ–Ω–∞' else None
                
                application = CashbackApplication(
                    user_id=user.id,
                    property_id=property_id,
                    property_name=f"{rooms}-–∫–æ–º–Ω –∫–≤–∞—Ä—Ç–∏—Ä–∞",
                    property_type=rooms,
                    property_size=property_size,
                    property_price=property_price,
                    complex_name=f'–ñ–ö {random.choice(["–ü—Ä–µ–º—å–µ—Ä", "–≠–ª–∏—Ç–Ω—ã–π", "–°–æ–ª–Ω–µ—á–Ω—ã–π", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"])}',
                    developer_name=random.choice(['–ì–ö "–ò–Ω–≤–µ—Å—Ç—Å—Ç—Ä–æ–π–∫—É–±"', '–ü–ò–ö', '–°–∞–º–æ–ª–µ—Ç –î–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç']),
                    cashback_amount=cashback_amount,
                    cashback_percent=round(cashback_amount / property_price * 100, 2),
                    status=status,
                    application_date=app_date,
                    approved_date=approved_date,
                    payout_date=payout_date,
                    approved_by_manager_id=managers[0].id if managers and status in ['–û–¥–æ–±—Ä–µ–Ω–∞', '–í—ã–ø–ª–∞—á–µ–Ω–∞'] else None,
                    notes=f'–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–µ—à–±–µ–∫–∞ –∑–∞ –ø–æ–∫—É–ø–∫—É {rooms}-–∫–æ–º–Ω–∞—Ç–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã',
                    manager_notes='–î–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã, –∑–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞' if status == '–û–¥–æ–±—Ä–µ–Ω–∞' else None
                )
                db.session.add(application)
                created_count += 1
    
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ {created_count} –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–µ—à–±–µ–∫")

def create_saved_searches(users):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤"""
    print("üîç –°–æ–∑–¥–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∏...")
    
    created_count = 0
    search_templates = [
        {
            'name': '1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–æ 6 –º–ª–Ω',
            'property_type': '1-–∫–æ–º–Ω',
            'price_max': 6000000
        },
        {
            'name': '2-3 –∫–æ–º–Ω–∞—Ç–Ω—ã–µ –≤ —Ü–µ–Ω—Ç—Ä–µ',
            'property_type': '2-–∫–æ–º–Ω',
            'location': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π'
        },
        {
            'name': '–°—Ç—É–¥–∏–∏ –¥–æ 4 –º–ª–Ω',
            'property_type': '—Å—Ç—É–¥–∏—è',
            'price_max': 4000000
        },
        {
            'name': '–ü—Ä–µ–º–∏—É–º –∫–≤–∞—Ä—Ç–∏—Ä—ã',
            'price_min': 12000000,
            'description': '–≠–ª–∏—Ç–Ω–æ–µ –∂–∏–ª—å–µ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞'
        },
        {
            'name': '–°–µ–º–µ–π–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã',
            'property_type': '3-–∫–æ–º–Ω',
            'size_min': 80.0
        }
    ]
    
    for user in users[:6]:  # –î–ª—è –ø–µ—Ä–≤—ã—Ö 6 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        searches_count = random.randint(2, 4)
        user_searches = random.sample(search_templates, min(searches_count, len(search_templates)))
        
        for search_data in user_searches:
            existing = SavedSearch.query.filter_by(
                user_id=user.id, 
                name=search_data['name']
            ).first()
            
            if not existing:
                saved_search = SavedSearch(
                    user_id=user.id,
                    name=search_data['name'],
                    description=search_data.get('description'),
                    property_type=search_data.get('property_type'),
                    location=search_data.get('location'),
                    price_min=search_data.get('price_min'),
                    price_max=search_data.get('price_max'),
                    size_min=search_data.get('size_min'),
                    notify_new_matches=random.choice([True, True, True, False]),  # 75% —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
                    created_at=datetime.utcnow() - timedelta(days=random.randint(1, 60))
                )
                db.session.add(saved_search)
                created_count += 1
    
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ {created_count} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤")

def create_user_notifications(users):
    """–°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üì¢ –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    created_count = 0
    notification_templates = [
        {
            'title': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
            'message': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
            'type': 'welcome'
        },
        {
            'title': '–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–µ—à–±–µ–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞',
            'message': '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–µ—à–±–µ–∫–∞ –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞.',
            'type': 'cashback'
        },
        {
            'title': '–ù–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º',
            'message': '–ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞—à–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ –ø–æ–∏—Å–∫—É.',
            'type': 'search_match'
        },
        {
            'title': '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ñ–ö',
            'message': '–¶–µ–Ω—ã –≤ –æ–¥–Ω–æ–º –∏–∑ –≤–∞—à–∏—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∂–∏–ª—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.',
            'type': 'price_change'
        },
        {
            'title': '–ù–æ–≤–∞—è –ø–æ–¥–±–æ—Ä–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
            'message': '–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è –≤–∞—Å –Ω–æ–≤—É—é –ø–æ–¥–±–æ—Ä–∫—É –∫–≤–∞—Ä—Ç–∏—Ä.',
            'type': 'collection'
        },
        {
            'title': '–ê–∫—Ü–∏—è: —Å–∫–∏–¥–∫–∞ 3%',
            'message': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∞–∫—Ü–∏—è –æ—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ 3% –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ.',
            'type': 'promotion'
        }
    ]
    
    for user in users:
        notifications_count = random.randint(3, 8)
        user_notifications = random.sample(notification_templates, min(notifications_count, len(notification_templates)))
        
        for notif_data in user_notifications:
            notification = UserNotification(
                user_id=user.id,
                title=notif_data['title'],
                message=notif_data['message'],
                notification_type=notif_data['type'],
                is_read=random.choice([True, False]),
                created_at=datetime.utcnow() - timedelta(days=random.randint(0, 30))
            )
            db.session.add(notification)
            created_count += 1
    
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ {created_count} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

def create_blog_posts(admins):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π –±–ª–æ–≥–∞"""
    print("üìù –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å–∏ –±–ª–æ–≥–∞...")
    
    if not admins:
        print("‚ö†Ô∏è –ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–µ–π")
        return
    
    blog_posts_data = [
        {
            'title': '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–µ: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
            'content': '''–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–µ –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–∞–∫—Ç–æ—Ä–æ–≤. 
            
–û—Å–Ω–æ–≤–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:
1. –†–µ–ø—É—Ç–∞—Ü–∏—è –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ - –∏–∑—É—á–∏—Ç–µ –µ–≥–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
2. –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ - –≤—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ
3. –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
4. –ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–¥–µ–ª–∫–∏
5. –°—Ä–æ–∫–∏ —Å–¥–∞—á–∏ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∏—Å–∫–∏

–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã:
- –°—Ä–∞–≤–Ω–∏—Ç–µ —Ü–µ–Ω—ã —Å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
- –£–∑–Ω–∞–π—Ç–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —Ä–∞—Å—Å—Ä–æ—á–∫–∏ –∏ –∏–ø–æ—Ç–µ–∫–∏
- –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã

–ü—Ä–∞–≤–æ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –∑–µ–º–ª—é –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ
- –ò–∑—É—á–∏—Ç–µ –¥–æ–≥–æ–≤–æ—Ä –¥–æ–ª–µ–≤–æ–≥–æ —É—á–∞—Å—Ç–∏—è
- –£–∑–Ω–∞–π—Ç–µ –æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–∏''',
            'excerpt': '–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≤—ã–±–æ—Ä—É –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–µ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –≤–∞–∂–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤',
            'category': '–°–æ–≤–µ—Ç—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º',
            'status': 'published',
            'tags': '["–Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞", "–ø–æ–∫—É–ø–∫–∞", "—Å–æ–≤–µ—Ç—ã"]'
        },
        {
            'title': '–ò–ø–æ—Ç–µ—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã 2024: –ª—å–≥–æ—Ç—ã –∏ —É—Å–ª–æ–≤–∏—è',
            'content': '''–û–±–∑–æ—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º 2024 –≥–æ–¥–∞.

–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞:
- –°—Ç–∞–≤–∫–∞ –æ—Ç 5.5% –≥–æ–¥–æ–≤—ã—Ö
- –î–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏
- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –æ—Ç 20%

IT-–∏–ø–æ—Ç–µ–∫–∞:
- –°—Ç–∞–≤–∫–∞ –æ—Ç 5.0% –≥–æ–¥–æ–≤—ã—Ö  
- –î–ª—è IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –æ—Ç 15%

–í–æ–µ–Ω–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞:
- –õ—å–≥–æ—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö
- –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- –û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–±—ä–µ–∫—Ç–∞–º

–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª:
- –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª—å–≥–æ—Ç—ã
- –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è''',
            'excerpt': '–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ–±–∑–æ—Ä –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –∏ –ª—å–≥–æ—Ç, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤ 2024 –≥–æ–¥—É',
            'category': '–ò–ø–æ—Ç–µ–∫–∞',
            'status': 'published',
            'tags': '["–∏–ø–æ—Ç–µ–∫–∞", "–ª—å–≥–æ—Ç—ã", "2024"]'
        },
        {
            'title': '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞: –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞',
            'content': '''–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å.

–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–æ—Å—Ç–∞:
- –ê–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- –ü—Ä–∏—Ç–æ–∫ –Ω–∞—Å–µ–ª–µ–Ω–∏—è –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤
- –†–∞–∑–≤–∏—Ç–∏–µ IT-—Å–µ–∫—Ç–æ—Ä–∞
- –ë–ª–∏–∑–æ—Å—Ç—å –∫ –º–æ—Ä—é –∏ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –∑–æ–Ω–∞–º

–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞–π–æ–Ω—ã:
1. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π - —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
2. –ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π - –Ω–æ–≤—ã–µ –∂–∏–ª—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã
3. –ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π - —Ä–∞–∑–≤–∏—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º:
- –í—ã–±–∏—Ä–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç—ã –≤ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏—è—Ö
- –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
- –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
- –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–¥–∞—á–∏ –≤ –∞—Ä–µ–Ω–¥—É''',
            'excerpt': '–ê–Ω–∞–ª–∏–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞',
            'category': '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
            'status': 'published',
            'tags': '["–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞"]'
        },
        {
            'title': '–ö–µ—à–±–µ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º',
            'content': '''–ö–µ—à–±–µ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ - –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å.

–í–∏–¥—ã –∫–µ—à–±–µ–∫–∞:
- –û—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ (–æ–±—ã—á–Ω–æ 1-3% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏)
- –û—Ç –±–∞–Ω–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∏–ø–æ—Ç–µ–∫–∏
- –û—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏

–ö–∞–∫ —É–≤–µ–ª–∏—á–∏—Ç—å –∫–µ—à–±–µ–∫:
1. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∞–∫—Ü–∏—è—Ö –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
2. –í—ã–±–∏—Ä–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∫—É–ø–∫–∏
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
4. –û—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∏–ø–æ—Ç–µ–∫—É –≤ –±–∞–Ω–∫–∞—Ö-–ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö

–£—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è:
- –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ —Å–¥–µ–ª–∫–∏
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –ø—Ä–æ–≥—Ä–∞–º–º—ã

–ù–∞–ª–æ–≥–æ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã:
- –ö–µ—à–±–µ–∫ –º–æ–∂–µ—Ç –æ–±–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞–ª–æ–≥–æ–º
- –í–µ–¥–∏—Ç–µ —É—á–µ—Ç –≤—Å–µ—Ö –≤—ã–ø–ª–∞—Ç
- –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –Ω–∞–ª–æ–≥–æ–≤—ã–º–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞–º–∏''',
            'excerpt': '–ö–∞–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –∫–µ—à–±–µ–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
            'category': '–ö–µ—à–±–µ–∫',
            'status': 'published',
            'tags': '["–∫–µ—à–±–µ–∫", "—ç–∫–æ–Ω–æ–º–∏—è", "–ø–æ–∫—É–ø–∫–∞"]'
        },
        {
            'title': '–¢–µ–Ω–¥–µ–Ω—Ü–∏–∏ —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ 2024 –≥–æ–¥—É',
            'content': '''–†—ã–Ω–æ–∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ 2024 –≥–æ–¥—É –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã:
- –†–æ—Å—Ç —Å–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ–º—Ñ–æ—Ä—Ç-–∫–ª–∞—Å—Å
- –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤–æ–≥–æ –∂–∏–ª—å—è
- –†–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–∏–≥–æ—Ä–æ–¥–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
- –í–Ω–µ–¥—Ä–µ–Ω–∏–µ smart-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –ñ–ö

–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä: —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç —Ü–µ–Ω
- –°–æ—á–∏: –≤—ã—Å–æ–∫–∏–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
- –ê–Ω–∞–ø–∞: —Ä–∞–∑–≤–∏—Ç–∏–µ –∫—É—Ä–æ—Ä—Ç–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏

–ü—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –≥–æ–¥:
- –£–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç —Ü–µ–Ω (5-10%)
- –†–∞–∑–≤–∏—Ç–∏–µ –∏–ø–æ—Ç–µ—á–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è
- –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
- –ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –æ—Ç—Ä–∞—Å–ª–∏

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º:
- –ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –ø–æ–∫—É–ø–∫—É –Ω–∞–¥–æ–ª–≥–æ
- –ò–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
- –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ''',
            'excerpt': '–û–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
            'category': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
            'status': 'published',
            'tags': '["—Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏", "–ø—Ä–æ–≥–Ω–æ–∑", "—Ä—ã–Ω–æ–∫"]'
        }
    ]
    
    created_count = 0
    for post_data in blog_posts_data:
        existing = BlogPost.query.filter_by(title=post_data['title']).first()
        if not existing:
            post = BlogPost(
                title=post_data['title'],
                content=post_data['content'],
                excerpt=post_data['excerpt'],
                category=post_data['category'],
                status=post_data['status'],
                tags=post_data.get('tags'),
                author_id=admins[0].id,
                published_at=datetime.utcnow() - timedelta(days=random.randint(1, 60)),
                views_count=random.randint(50, 500),
                likes_count=random.randint(5, 50)
            )
            db.session.add(post)
            created_count += 1
    
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ {created_count} —Å—Ç–∞—Ç–µ–π –±–ª–æ–≥–∞")

def create_collections(managers, users):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    print("üìö –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏...")
    
    if not managers or not users:
        print("‚ö†Ô∏è –ù–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π")
        return
    
    collections_data = [
        {
            'title': '–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–ª–æ–¥–æ–π —Å–µ–º—å–∏',
            'description': '–ü–æ–¥–±–æ—Ä–∫–∞ 2-3 –∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä –≤ —Å–µ–º–µ–π–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π',
            'tags': '["–º–æ–ª–æ–¥–∞—è —Å–µ–º—å—è", "2-3 –∫–æ–º–Ω–∞—Ç—ã", "–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞"]'
        },
        {
            'title': '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å: —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥',
            'description': '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤—ã—Å–æ–∫–∏–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º —Ä–æ—Å—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–¥–∞—á–∏ –≤ –∞—Ä–µ–Ω–¥—É',
            'tags': '["–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–∞—Ä–µ–Ω–¥–∞", "—Ä–æ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏"]'
        },
        {
            'title': '–ü–µ—Ä–≤–æ–µ –∂–∏–ª—å–µ: –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã',
            'description': '–ë—é–¥–∂–µ—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä–≤–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏–ø–æ—Ç–µ–∫–∏',
            'tags': '["–ø–µ—Ä–≤–æ–µ –∂–∏–ª—å–µ", "–±—é–¥–∂–µ—Ç", "–∏–ø–æ—Ç–µ–∫–∞"]'
        },
        {
            'title': '–ü—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å: —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
            'description': '–≠–ª–∏—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –ø—Ä–µ—Å—Ç–∏–∂–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏',
            'tags': '["–ø—Ä–µ–º–∏—É–º", "—ç–ª–∏—Ç–Ω–æ–µ –∂–∏–ª—å–µ", "—ç–∫—Å–∫–ª—é–∑–∏–≤"]'
        },
        {
            'title': '–°—Ç—É–¥–∏–∏ –∏ 1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ: –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç',
            'description': '–ù–µ–±–æ–ª—å—à–∏–µ, –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –ø–∞—Ä—ã',
            'tags': '["—Å—Ç—É–¥–∏—è", "1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "–∫–æ–º–ø–∞–∫—Ç"]'
        }
    ]
    
    created_count = 0
    for i, collection_data in enumerate(collections_data):
        existing = Collection.query.filter_by(title=collection_data['title']).first()
        if not existing:
            assigned_user = users[i % len(users)] if users else None
            
            collection = Collection(
                title=collection_data['title'],
                description=collection_data['description'],
                tags=collection_data['tags'],
                created_by_manager_id=managers[0].id,
                assigned_to_user_id=assigned_user.id if assigned_user else None,
                status=random.choice(['–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞', '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞', '–ß–µ—Ä–Ω–æ–≤–∏–∫']),
                is_public=random.choice([True, False]),
                created_at=datetime.utcnow() - timedelta(days=random.randint(1, 30)),
                sent_at=datetime.utcnow() - timedelta(days=random.randint(1, 15)) if random.choice([True, False]) else None
            )
            db.session.add(collection)
            db.session.flush()  # –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
            properties_count = random.randint(3, 8)
            for j in range(properties_count):
                rooms = random.choice(['1', '2', '3', '4'])
                property_price = random.randint(4000000, 18000000)
                
                collection_property = CollectionProperty(
                    collection_id=collection.id,
                    property_id=f'coll_{collection.id}_{j}',
                    property_name=f"{rooms}-–∫–æ–º–Ω –∫–≤–∞—Ä—Ç–∏—Ä–∞",
                    property_price=property_price,
                    complex_name=f'–ñ–ö {random.choice(["–°–æ–ª–Ω–µ—á–Ω—ã–π", "–ü—Ä–µ–º—å–µ—Ä", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"])}',
                    property_type=rooms,
                    property_size=random.randint(35, 150),
                    manager_note=f'–û—Ç–ª–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è {collection_data["title"].lower()}. –†–µ–∫–æ–º–µ–Ω–¥—É—é –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é.',
                    order_index=j
                )
                db.session.add(collection_property)
            
            created_count += 1
    
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ {created_count} –∫–æ–ª–ª–µ–∫—Ü–∏–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...\n")
    
    with app.app_context():
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        users = User.query.all()
        managers = Manager.query.all()
        admins = Admin.query.all()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, {len(managers)} –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤, {len(admins)} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
        properties_data = load_properties_data()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        create_favorite_properties(users, properties_data)
        create_cashback_applications(users, managers)
        create_saved_searches(users)
        create_user_notifications(users)
        create_blog_posts(admins)
        create_collections(managers, users)
        
        print("\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python check_database.py")

if __name__ == '__main__':
    main()