#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import json
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker
from infrastructure_api import get_infrastructure_summary

def update_infrastructure_data():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–± –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–ª—è —Ä–∞–π–æ–Ω–æ–≤ –∏ —É–ª–∏—Ü —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    """
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    database_url = os.environ.get('DATABASE_URL')
    if not database_url:
        print("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        engine = create_engine(database_url)
        Session = sessionmaker(bind=engine)
        session = Session()
        
        print("üèòÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–∞–π–æ–Ω–æ–≤...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–π–æ–Ω—ã —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
        districts_query = text("""
            SELECT id, name, slug, latitude, longitude 
            FROM districts 
            WHERE latitude IS NOT NULL AND longitude IS NOT NULL
            LIMIT 10
        """)
        
        districts = session.execute(districts_query).fetchall()
        
        for district in districts:
            district_id, name, slug, lat, lng = district
            
            print(f"üìç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–∞–π–æ–Ω: {name}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
            infrastructure = get_infrastructure_summary(float(lat), float(lng))
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            update_query = text("""
                UPDATE districts 
                SET 
                    distance_to_center = :distance,
                    infrastructure_data = :infrastructure_json,
                    updated_at = NOW()
                WHERE id = :district_id
            """)
            
            session.execute(update_query, {
                'distance': infrastructure['distance_to_center'],
                'infrastructure_json': json.dumps(infrastructure, ensure_ascii=False),
                'district_id': district_id
            })
            
            print(f"  ‚úÖ {name}: {infrastructure['distance_to_center']} –∫–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞")
            print(f"     –ú–µ–¥–∏—Ü–∏–Ω–∞: {infrastructure['medical_count']}, –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {infrastructure['education_count']}")
        
        print("\\nüõ£Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —É–ª–∏—Ü...")
        
        # –ü–æ–ª—É—á–∞–µ–º —É–ª–∏—Ü—ã —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        streets_query = text("""
            SELECT id, name, latitude, longitude 
            FROM streets 
            WHERE latitude IS NOT NULL AND longitude IS NOT NULL
            LIMIT 10
        """)
        
        streets = session.execute(streets_query).fetchall()
        
        for street in streets:
            street_id, name, lat, lng = street
            
            print(f"üìç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —É–ª–∏—Ü—É: {name}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
            infrastructure = get_infrastructure_summary(float(lat), float(lng))
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            update_query = text("""
                UPDATE streets 
                SET 
                    distance_to_center = :distance,
                    infrastructure_data = :infrastructure_json,
                    updated_at = NOW()
                WHERE id = :street_id
            """)
            
            session.execute(update_query, {
                'distance': infrastructure['distance_to_center'],
                'infrastructure_json': json.dumps(infrastructure, ensure_ascii=False),
                'street_id': street_id
            })
            
            print(f"  ‚úÖ {name}: {infrastructure['distance_to_center']} –∫–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        session.close()
        
        print("\\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")
        return False

if __name__ == "__main__":
    success = update_infrastructure_data()
    if not success:
        sys.exit(1)