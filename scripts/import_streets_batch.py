#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

def translit_to_slug(text):
    """–°–æ–∑–¥–∞–µ—Ç slug –∏–∑ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    translit_map = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e',
        '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
        '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
        '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
        ' ': '-', '.': '', ',': '', '(': '', ')': '', '‚Ññ': 'n'
    }
    
    result = ''
    for char in text.lower():
        if char in translit_map:
            result += translit_map[char]
        elif char.isalpha() or char.isdigit() or char == '-':
            result += char
    
    # –£–±–∏—Ä–∞–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –¥–µ—Ñ–∏—Å—ã
    while '--' in result:
        result = result.replace('--', '-')
    
    return result.strip('-')

def import_streets_batch(batch_size=50):
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —É–ª–∏—Ü—ã –ø–∞—á–∫–∞–º–∏ —Å —á–∞—Å—Ç—ã–º–∏ –∫–æ–º–º–∏—Ç–∞–º–∏"""
    
    database_url = os.environ.get('DATABASE_URL')
    if not database_url:
        print("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        engine = create_engine(database_url)
        Session = sessionmaker(bind=engine)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON
        with open('data/streets.json', 'r', encoding='utf-8') as f:
            streets_data = json.load(f)
        
        print(f"üì¶ –í—Å–µ–≥–æ —É–ª–∏—Ü –≤ JSON: {len(streets_data)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        session = Session()
        result = session.execute(text("SELECT COUNT(*) as count FROM streets")).fetchone()
        current_count = result.count
        print(f"üìä –£–∂–µ –≤ –±–∞–∑–µ: {current_count}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ slug'–∏  
        existing_slugs = set()
        existing_streets = session.execute(text("SELECT slug FROM streets")).fetchall()
        for street in existing_streets:
            existing_slugs.add(street.slug)
        session.close()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—á–∫–∞–º–∏
        imported_total = 0
        batch_data = []
        
        for i, street in enumerate(streets_data):
            name = street['name']
            slug = translit_to_slug(name)
            
            if slug in existing_slugs:
                continue
                
            batch_data.append({'name': name, 'slug': slug})
            existing_slugs.add(slug)
            
            # –ö–æ–≥–¥–∞ –Ω–∞–±—Ä–∞–ª–∏ –ø–∞—á–∫—É –∏–ª–∏ –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞
            if len(batch_data) >= batch_size or i == len(streets_data) - 1:
                if batch_data:  # –ï—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                    session = Session()
                    try:
                        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—á–∫—É
                        for street_data in batch_data:
                            session.execute(text("""
                                INSERT INTO streets (name, slug, zoom_level, created_at, updated_at) 
                                VALUES (:name, :slug, 15, NOW(), NOW())
                            """), street_data)
                        
                        session.commit()
                        imported_total += len(batch_data)
                        print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_total} (–ø–∞—á–∫–∞: {len(batch_data)})")
                        
                    except Exception as e:
                        session.rollback()
                        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–∞—á–∫–µ: {e}")
                    finally:
                        session.close()
                    
                    batch_data = []  # –û—á–∏—â–∞–µ–º –ø–∞—á–∫—É
        
        print(f"\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"‚úÖ –í—Å–µ–≥–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_total}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = import_streets_batch(batch_size=100)
    if success:
        print("\nüöÄ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç...")
    else:
        sys.exit(1)