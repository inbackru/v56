#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
from app import app, db
from models import (
    User, Manager, Admin, BlogPost, Collection, CollectionProperty,
    CashbackApplication, FavoriteProperty, SavedSearch, UserNotification,
    District, Developer, ResidentialComplex, SearchCategory
)

def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n")
    
    with app.app_context():
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü–µ
        stats = {
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (Users)': User.query.count(),
            '–ú–µ–Ω–µ–¥–∂–µ—Ä—ã (Managers)': Manager.query.count(), 
            '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (Admins)': Admin.query.count(),
            '–†–∞–π–æ–Ω—ã (Districts)': District.query.count(),
            '–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫–∏ (Developers)': Developer.query.count(),
            '–ñ–ö (Residential Complexes)': ResidentialComplex.query.count(),
            '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ (Search Categories)': SearchCategory.query.count(),
            '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ (Favorite Properties)': FavoriteProperty.query.count(),
            '–ó–∞—è–≤–∫–∏ –Ω–∞ –∫–µ—à–±–µ–∫ (Cashback Applications)': CashbackApplication.query.count(),
            '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∏ (Saved Searches)': SavedSearch.query.count(),
            '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (User Notifications)': UserNotification.query.count(),
            '–ö–æ–ª–ª–µ–∫—Ü–∏–∏ (Collections)': Collection.query.count(),
            '–°—Ç–∞—Ç—å–∏ –±–ª–æ–≥–∞ (Blog Posts)': BlogPost.query.count()
        }
        
        print("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–±–ª–∏—Ü–∞–º:")
        print("=" * 50)
        total_records = 0
        for table_name, count in stats.items():
            print(f"{table_name:<40} {count:>8} –∑–∞–ø–∏—Å–µ–π")
            total_records += count
        
        print("=" * 50)
        print(f"{'–í–°–ï–ì–û –ó–ê–ü–ò–°–ï–ô':<40} {total_records:>8}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
        print("\nüîê –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
        print("=" * 50)
        
        demo_user = User.query.filter_by(email='demo@inback.ru').first()
        if demo_user:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: demo@inback.ru (ID: {demo_user.id})")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å demo@inback.ru –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        demo_manager = Manager.query.filter_by(email='manager@inback.ru').first()
        if demo_manager:
            print(f"‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä: manager@inback.ru (ID: {demo_manager.id})")
        else:
            print("‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä manager@inback.ru –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        demo_admin = Admin.query.filter_by(email='admin@inback.ru').first()
        if demo_admin:
            print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@inback.ru (ID: {demo_admin.id})")
        else:
            print("‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä admin@inback.ru –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        print("\nüìù –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
        print("=" * 50)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = User.query.limit(3).all()
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)} –∏–∑ {User.query.count()}):")
        for user in users:
            print(f"  - {user.full_name} ({user.email}) - {user.client_status}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–π–æ–Ω–æ–≤
        districts = District.query.limit(5).all()
        print(f"\n–†–∞–π–æ–Ω—ã ({len(districts)} –∏–∑ {District.query.count()}):")
        for district in districts:
            print(f"  - {district.name} (slug: {district.slug})")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤
        developers = Developer.query.limit(5).all()
        print(f"\n–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫–∏ ({len(developers)} –∏–∑ {Developer.query.count()}):")
        for developer in developers:
            print(f"  - {developer.name} (slug: {developer.slug})")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ñ–ö
        complexes = ResidentialComplex.query.limit(5).all()
        print(f"\n–ñ–∏–ª—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã ({len(complexes)} –∏–∑ {ResidentialComplex.query.count()}):")
        for complex_obj in complexes:
            district_name = complex_obj.district.name if complex_obj.district else "–ù–µ —É–∫–∞–∑–∞–Ω"
            developer_name = complex_obj.developer.name if complex_obj.developer else "–ù–µ —É–∫–∞–∑–∞–Ω"
            print(f"  - {complex_obj.name} ({district_name}, {developer_name})")
        
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == '__main__':
    check_database()