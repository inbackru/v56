#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ Excel —Ñ–∞–π–ª–∞
"""
import pandas as pd
import os
import sys
from sqlalchemy import text
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app, db

def safe_value(value, default=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è"""
    if pd.isna(value) or value == '' or str(value).strip() == '':
        return default
    return str(value).strip()

def safe_int(value, default=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ int"""
    if pd.isna(value) or value == '':
        return default
    try:
        return int(float(value))
    except (ValueError, TypeError):
        return default

def safe_float(value, default=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ float"""
    if pd.isna(value) or value == '':
        return default
    try:
        return float(value)
    except (ValueError, TypeError):
        return default

def import_excel_properties():
    """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ Excel"""
    
    # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Ñ–∞–π–ª
    excel_files = [
        'attached_assets/excel_properties_1756658927673.xlsx',
        'attached_assets/excel_properties_1756658357106.xlsx',
        'attached_assets/domclick_krasnodar_20250829_210722.xlsx'
    ]
    
    file_path = None
    for f in excel_files:
        if os.path.exists(f):
            file_path = f
            break
    
    if not file_path:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
        return False
    
    print(f"üìÅ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞: {file_path}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    try:
        df = pd.read_excel(file_path)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        return False
    
    # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º
    with app.app_context():
        try:
            db.session.execute(text("DELETE FROM excel_properties"))
            db.session.commit()
            print("üóëÔ∏è –û—á–∏—â–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ excel_properties")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
            db.session.rollback()
    
        imported_count = 0
        error_count = 0
        
        print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç...")
        
        for index, row in df.iterrows():
            try:
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
                insert_data = {
                    'inner_id': safe_int(row.get('inner_id')),
                    'url': safe_value(row.get('url')),
                    'address_display_name': safe_value(row.get('address_display_name')),
                    'complex_name': safe_value(row.get('complex_name')),
                    'complex_id': safe_int(row.get('complex_id')),
                    'price': safe_int(row.get('price')),
                    'max_price': safe_int(row.get('max_price')),
                    'min_price': safe_int(row.get('min_price')),
                    'square_price': safe_int(row.get('square_price')),
                    'object_area': safe_float(row.get('object_area')),
                    'object_rooms': safe_int(row.get('object_rooms')),
                    'object_max_floor': safe_int(row.get('object_max_floor')),
                    'object_min_floor': safe_int(row.get('object_min_floor')),
                    'developer_name': safe_value(row.get('developer_name')),
                    'developer_id': safe_int(row.get('developer_id')),
                    'address_position_lat': safe_float(row.get('address_position_lat')),
                    'address_position_lon': safe_float(row.get('address_position_lon')),
                    'parsed_city': safe_value(row.get('parsed_city')),
                    'parsed_region': safe_value(row.get('parsed_region')),
                    'parsed_district': safe_value(row.get('parsed_district')),
                    'deal_type': safe_value(row.get('deal_type')),
                    'renovation_type': safe_value(row.get('renovation_type')),
                    'description': safe_value(row.get('description')),
                    'photos': safe_value(row.get('photos')),
                    'is_auction': bool(row.get('is_auction', False)),
                    'published_dt': safe_value(row.get('published_dt')),
                    'chat_available': bool(row.get('chat_available', False)),
                }
                
                # –£–±–∏—Ä–∞–µ–º None –∑–Ω–∞—á–µ–Ω–∏—è 
                insert_data = {k: v for k, v in insert_data.items() if v is not None}
                
                if not insert_data.get('inner_id'):
                    print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É {index + 2}: –Ω–µ—Ç inner_id")
                    continue
                
                # –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                columns = ', '.join(insert_data.keys())
                placeholders = ', '.join([f':{k}' for k in insert_data.keys()])
                
                sql = f"""
                INSERT INTO excel_properties ({columns}) 
                VALUES ({placeholders})
                ON CONFLICT (inner_id) DO NOTHING
                """
                
                db.session.execute(text(sql), insert_data)
                imported_count += 1
                
                if imported_count % 50 == 0:
                    print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported_count} –∑–∞–ø–∏—Å–µ–π...")
                    db.session.commit()
                
            except Exception as e:
                error_count += 1
                if error_count <= 5:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –æ—à–∏–±–æ–∫
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {index + 2}: {e}")
                continue
        
        # –ö–æ–º–º–∏—Ç–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        try:
            db.session.commit()
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
            print(f"üìä –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_count} –∑–∞–ø–∏—Å–µ–π")
            print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = db.session.execute(text("SELECT COUNT(*) FROM excel_properties")).scalar()
            print(f"üè† –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {result}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–º–∏—Ç–∞: {e}")
            db.session.rollback()
            return False

if __name__ == '__main__':
    with app.app_context():
        success = import_excel_properties()
        if success:
            print("üéâ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("üí• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")