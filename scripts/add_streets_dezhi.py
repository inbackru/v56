#!/usr/bin/env python3
"""
–°–∏—Å—Ç–µ–º–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–ª–∏—Ü –Ω–∞ –±—É–∫–≤—ã –î, –ï, –ñ, –ó, –ò –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ JSON —Ñ–∞–π–ª
"""

import json
import os
import sys
from app import app, db
from models import Street
from urllib.parse import quote
import random

# –°–ø–∏—Å–∫–∏ —É–ª–∏—Ü –ø–æ –±—É–∫–≤–∞–º
streets_d = [
    "–î–∞–≥–µ—Å—Ç–∞–Ω—Å–∫–∞—è —É–ª.",
    "–î–∞–ª—å–Ω–∏–π –±—É–ª—å–≤–∞—Ä",
    "–î–∞–ª—å–Ω–∏–π –ø—Ä–æ–µ–∑–¥",
    "–î–∞–ª—å–Ω—è—è —É–ª.",
    "–î–∞–ª—å–Ω—è—è (–°–ù–¢ –°–æ–ª–Ω—ã—à–∫–æ) —É–ª.",
    "–î–∞–º–∞–µ–≤–∞ —É–ª.",
    "–î–∞—á–Ω–∞—è —É–ª.",
    "–î–≤–æ—Ä—Ü–æ–≤–∞—è —É–ª.",
    "–î–µ–∂–Ω—ë–≤–∞ —É–ª.",
    "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ —É–ª.",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —É–ª.",
    "–î–µ–º–µ–Ω—Ç–∏—è –ö—Ä–∞—Å—é–∫–∞ —É–ª.",
    "–î–µ–º–∏–¥–æ–≤—Å–∫–∞—è —É–ª.",
    "–î–µ–º–∏–¥–æ–≤—Å–∫–∏–π –ø—Ä–æ–µ–∑–¥",
    "–î—ë–º–∏–Ω–∞ —É–ª.",
    "–î–µ–º—É—Å–∞ —É–ª.",
    "–î–µ–ø–æ–≤—Å–∫–∞—è —É–ª.",
    "–î–µ–ø–æ–≤—Å–∫–æ–π –ø—Ä–æ–µ–∑–¥",
    "–î–µ–ø—É—Ç–∞—Ç—Å–∫–∞—è —É–ª.",
    "–î–µ—Ä–±–µ–Ω—Ç—Å–∫–∞—è —É–ª.",
    "–î–µ—Ä–±–µ–Ω—Ç—Å–∫–∏–π –ø—Ä–æ–µ–∑–¥",
    "–î–µ—Ç—Å–∫–∏–π —Å–∫–≤–µ—Ä",
    "–î–∂—É–±–≥–∏–Ω—Å–∫–∞—è —É–ª.",
    "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ —É–ª.",
    "–î–∏–∫—É–Ω–∞ —É–ª.",
    "–î–∏–º–∏—Ç—Ä–æ–≤–∞ —É–ª.",
    "–î–∏–Ω—Å–∫–æ–π –ø—Ä–æ–µ–∑–¥",
    "–î–ª–∏–Ω–Ω–∞—è —É–ª.",
    "–î–º–∏—Ç—Ä–∏–µ–≤—Å–∫–∞—è –î–∞–º–±–∞ —É–ª.",
    "–î–º–∏—Ç—Ä–∏—è –ë–ª–∞–≥–æ–µ–≤–∞ —É–ª.",
    "–î–º–∏—Ç—Ä–∏—è –î–æ–Ω—Å–∫–æ–≥–æ —É–ª.",
    "–î–º–∏—Ç—Ä–∏—è –ü–æ–∂–∞—Ä—Å–∫–æ–≥–æ —É–ª.",
    "–î–Ω–µ–ø—Ä–æ–≤—Å–∫–∞—è —É–ª.",
    "–î–Ω–µ—Å—Ç—Ä–æ–≤—Å–∫–∞—è —É–ª.",
    "–î–æ–±—Ä–∞—è —É–ª.",
    "–î–æ–∑–æ—Ä–Ω–∞—è —É–ª.",
    "–î–æ–∫—É—á–∞–µ–≤–∞ –ø–µ—Ä.",
    "–î–æ–ª–∂–∞–Ω—Å–∫–∞—è —É–ª.",
    "–î–æ–º–±–∞–π—Å–∫–∞—è —É–ª.",
    "–î–æ–Ω—Å–∫–∞—è —É–ª.",
    "–î–æ—Ä–æ–∂–Ω–∞—è —É–ª.",
    "–î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ —É–ª.",
    "–î—Ä–∞–≥—É–Ω—Å–∫–∞—è —É–ª.",
    "–î—Ä–∞–≥—É–Ω—Å–∫–∏–π –ø—Ä–æ–µ–∑–¥",
    "–î—Ä–µ–∑–¥–µ–Ω—Å–∫–∞—è —É–ª.",
    "–î—Ä—É–∂–Ω–∞—è —É–ª.",
    "–î—Ä—É–∂–Ω—ã–π –ø—Ä–æ–µ–∑–¥",
    "–î—É–±–∏–Ω—Å–∫–∏–π —Å–∫–≤–µ—Ä",
    "–î—É–±–∏–Ω—Å–∫–∏–π –ø–µ—Ä.",
    "–î—É–±—Ä–∞–≤–Ω–∞—è —É–ª.",
    "–î—É–º–µ–Ω–∫–æ —É–ª.",
    "–î—É–º—Å–∫–∞—è —É–ª.",
    "–î—É–º—Å–∫–∏–π –ø–µ—Ä.",
    "–î—É–Ω–∞–µ–≤—Å–∫–æ–≥–æ —É–ª.",
    "–î—É–Ω–∞–π—Å–∫–∞—è —É–ª.",
    "–î—É—à–∏—Å—Ç–∞—è —É–ª.",
    "–î—è–¥—å–∫–æ–≤—Å–∫–∞—è —É–ª."
]

streets_e = [
    "–ï–≤–≥–µ–Ω–∏–∏ –ñ–∏–≥—É–ª–µ–Ω–∫–æ —É–ª.",
    "–ï–≤–≥–µ–Ω–∏—è –°–∏–∑–æ–Ω–µ–Ω–∫–æ —É–ª.",
    "–ï–≤–¥–æ–∫–∏–∏ –ë–µ—Ä—à–∞–Ω—Å–∫–æ–π —É–ª.",
    "–ï–≤–¥–æ–∫–∏–∏ –°–æ–∫–æ–ª —É–ª.",
    "–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —É–ª.",
    "–ï–π—Å–∫–∞—è —É–ª.",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–æ–≤—Å–∫–∞—è —É–ª.",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–æ–¥–∞—Ä—Å–∫–∞—è —É–ª.",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω—ã –ø–ª.",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω—ã –í–µ–ª–∏–∫–æ–π —É–ª.",
    "–ï–ª–µ—Ü–∫–∞—è —É–ª.",
    "–ï–ª–∏–∑–∞–≤–µ—Ç–∏–Ω—Å–∫–∞—è —É–ª.",
    "–ï–ª–∏—Å–µ–π—Å–∫–∞—è —É–ª.",
    "–ï–ª–æ–≤–∞—è —É–ª.",
    "–ï–Ω–∏—Å–µ–π—Å–∫–∞—è —É–ª.",
    "–ï—Å–∞—É–ª—å—Å–∫–∞—è —É–ª.",
    "–ï—Å–µ–Ω–∏–Ω–∞ –ø–µ—Ä.",
    "–ï—Å–µ–Ω–∏–Ω–∞ —É–ª.",
    "–ï—Å—Å–µ–Ω—Ç—É–∫—Å–∫–∞—è —É–ª."
]

streets_zh = [
    "–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–∞—è —É–ª.",
    "–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–∞—è (–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π) —É–ª.",
    "–ñ–µ–º—á—É–∂–Ω–∞—è —É–ª.",
    "–ñ–∏–≤–∏–ª–æ —É–ª.",
    "–ñ–∏–≤–æ–ø–∏—Å–Ω–∞—è —É–ª.",
    "–ñ–∏–≥—É–ª—ë–≤—Å–∫–∞—è —É–ª.",
    "–ñ–ª–æ–±—ã —É–ª.",
    "–ñ—É–∫–æ–≤—Å–∫–æ–≥–æ —É–ª.",
    "–ñ—É—Ä–∞–≤–ª–∏–Ω–∞—è —É–ª."
]

streets_z = [
    "–ó–∞–≤–æ–¥—Å–∫–∞—è —É–ª.",
    "–ó–∞–≤–æ–¥—Å–∫–∞—è (–ü–∞—à–∫–æ–≤—Å–∫–∏–π) —É–ª.",
    "–ó–∞–≥–æ—Ä—Å–∫–∞—è —É–ª.",
    "–ó–∞–∫–∞—Ç–Ω–∞—è —É–ª.",
    "–ó–∞–ø–∞–¥–Ω–∞—è —É–ª.",
    "–ó–∞–ø–∞–¥–Ω–æ-–ö—Ä—É–≥–ª–∏–∫–æ–≤—Å–∫–∞—è —É–ª.",
    "–ó–∞–ø–∞–¥–Ω—ã–π –û–±—Ö–æ–¥ —É–ª.",
    "–ó–∞–ø–æ–ª—è—Ä–Ω–∞—è —É–ª.",
    "–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è —É–ª.",
    "–ó–∞—Ä–µ—á–Ω—ã–π –ø–µ—Ä.",
    "–ó–∞—Ç–æ–Ω–Ω–∞—è —É–ª.",
    "–ó–∞—Ç–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∑–¥",
    "–ó–∞—Ö–∞—Ä–æ–≤–∞ —É–ª.",
    "–ó–∞—â–∏—Ç–Ω–∏–∫–æ–≤ –û—Ç–µ—á–µ—Å—Ç–≤–∞ —É–ª.",
    "–ó–≤–∞–Ω–∞—è —É–ª.",
    "–ó–≤–µ–∑–¥–Ω–∞—è —É–ª.",
    "–ó–≤–µ–∑–¥–Ω—ã–π –ø–µ—Ä.",
    "–ó–≤–µ–∑–¥–æ–ø–∞–¥–Ω–∞—è —É–ª.",
    "–ó–≤–µ–Ω–∏–≥–æ—Ä–æ–¥—Å–∫–∞—è —É–ª.",
    "–ó–≤–µ–Ω—è—â–∞—è —É–ª.",
    "–ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥—Å–∫–∞—è —É–ª.",
    "–ó–µ–º–ª—è–Ω–∏—á–Ω–∞—è —É–ª.",
    "–ó–µ–º–ª—è–Ω–∏—á–Ω–∞—è (–°–µ–≤–µ—Ä–Ω—ã–π) —É–ª.",
    "–ó–µ–Ω–∏—Ç—á–∏–∫–æ–≤ —Å–∫–≤–µ—Ä",
    "–ó–∏–Ω—ã –ü–æ—Ä—Ç–Ω–æ–≤–æ–π —É–ª.",
    "–ó–∏–ø–æ–≤—Å–∫–∞—è —É–ª.",
    "–ó–Ω–∞–º–µ–Ω—Å–∫–∞—è —É–ª.",
    "–ó–æ–∏ –ö–æ—Å–º–æ–¥–µ–º—å—è–Ω—Å–∫–æ–π —É–ª.",
    "–ó–æ–Ω–∞–ª—å–Ω–∞—è —É–ª.",
    "–ó–æ–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —É–ª."
]

streets_i = [
    "–ò–≤–∞–Ω–∞ –ö–∏—è—à–∫–æ –ø–µ—Ä.",
    "–ò–≤–∞–Ω–∞ –ö–∏—è—à–∫–æ —É–ª.",
    "–ò–≤–∞–Ω–∞ –ö–æ–∂–µ–¥—É–±–∞ —É–ª.",
    "–ò–≤–∞–Ω–∞ –†–æ—Å–ª–æ–≥–æ —É–ª.",
    "–ò–≤–∞–Ω–∞ –°—É—Å–∞–Ω–∏–Ω–∞ —É–ª.",
    "–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è —É–ª.",
    "–ò–≤–¥–µ–ª—å—Å–∫–∞—è —É–ª.",
    "–ò–≥–Ω–∞—Ç–æ–≤–∞ —É–ª.",
    "–ò–≥–æ—Ä—è –ê–≥–∞—Ä–∫–æ–≤–∞ —É–ª.",
    "–ò–∑–º–∞–∏–ª—å—Å–∫–∞—è —É–ª.",
    "–ò–∑–æ–±–∏–ª—å–Ω–∞—è —É–ª.",
    "–ò–∑–æ—Å–∏–º–æ–≤–∞ —É–ª.",
    "–ò–∑—É–º—Ä—É–¥–Ω–∞—è —É–ª.",
    "–ò–∑—É–º—Ä—É–¥–Ω—ã–π –ø—Ä–æ–µ–∑–¥",
    "–ò–ª—å–∏–Ω—Å–∫–∞—è —É–ª.",
    "–ò–ª—å—Å–∫–∏–π –ø–µ—Ä.",
    "–∏–º–µ–Ω–∏ –ì.–ö. –ñ—É–∫–æ–≤–∞ —Å–∫–≤–µ—Ä",
    "–∏–º–µ–Ω–∏ –ì–∞—Ç–æ–≤–∞ —Å–∫–≤–µ—Ä",
    "–∏–º–µ–Ω–∏ –î–æ–≤–∞—Ç–æ—Ä–∞ —É–ª.",
    "–∏–º–µ–Ω–∏ –õ.–ù. –¢–æ–ª—Å—Ç–æ–≥–æ —Å–∫–≤–µ—Ä",
    "–∏–º–µ–Ω–∏ –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞ —É–ª.",
    "–∏–º–µ–Ω–∏ –°—É–≤–æ—Ä–æ–≤–∞ (–ü–∞—à–∫–æ–≤—Å–∫–∏–π) —É–ª.",
    "–∏–º–µ–Ω–∏ –§.–≠. –î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ —Å–∫–≤–µ—Ä",
    "–∏–º–µ–Ω–∏ –ß–µ–ª—é—Å–∫–∏–Ω–∞ —É–ª.",
    "–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–∞—è —É–ª.",
    "–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∑–¥",
    "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–∞—è —É–ª.",
    "–ò–Ω—Å—Ç–∏—Ç—É—Ç—Å–∫–∞—è —É–ª.",
    "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±—É–ª—å–≤–∞—Ä",
    "–ò–ø–ø–æ–¥—Ä–æ–º–Ω–∞—è —É–ª.",
    "–ò–ø–ø–æ–¥—Ä–æ–º–Ω–∞—è (–°–ù–¢ –£—Ä–æ–∂–∞–π) —É–ª.",
    "–ò–ø–ø–æ–¥—Ä–æ–º–Ω—ã–π –ø—Ä–æ–µ–∑–¥",
    "–ò—Ä–∫–ª–∏–µ–≤—Å–∫–∞—è —É–ª.",
    "–ò—Ä–∫—É—Ç—Å–∫–∞—è —É–ª.",
    "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —É–ª.",
    "–ò—à—É–Ω–∏–Ω–∞ –ø–µ—Ä."
]

# –†–∞–π–æ–Ω—ã –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞
districts = [
    "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π",
    "–ó–∞–ø–∞–¥–Ω—ã–π", 
    "–ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π",
    "–ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π",
    "–§–µ—Å—Ç–∏–≤–∞–ª—å–Ω—ã–π",
    "–ü–∞—à–∫–æ–≤—Å–∫–∏–π"
]

def create_street_slug(name):
    """–°–æ–∑–¥–∞—Ç—å —Å–ª–∞–≥ –¥–ª—è —É–ª–∏—Ü—ã"""
    return (name.lower()
            .replace(' ', '-')
            .replace('.', '')
            .replace('—ë', '–µ')
            .replace('–π', '–∏')
            .replace('(', '')
            .replace(')', '')
            .replace(',', '')
            .replace('‚Äî', '-')
            .replace('‚Äì', '-'))

def generate_street_data(name):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–ª–∏—Ü—ã"""
    random.seed(hash(name))
    
    latitude = round(random.uniform(45.035, 45.085), 6)
    longitude = round(random.uniform(38.976, 39.138), 6)
    
    district = random.choice(districts)
    properties_count = random.randint(2, 15)
    
    return {
        "name": name,
        "district": district,
        "properties_count": properties_count,
        "coordinates": {
            "latitude": latitude,
            "longitude": longitude
        },
        "description": f"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–∞ —É–ª–∏—Ü–µ {name} –≤ {district} —Ä–∞–π–æ–Ω–µ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞ —Å –∫—ç—à–±–µ–∫–æ–º –¥–æ 350 000 ‚ÇΩ. –ü–æ–¥–±–µ—Ä—ë–º –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ª—É—á—à–∏—Ö –ñ–ö —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫—ç—à–±–µ–∫–æ–º.",
        "meta_title": f"{name} - –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏ —Å –∫—ç—à–±–µ–∫–æ–º | InBack",
        "meta_description": f"–ö–≤–∞—Ä—Ç–∏—Ä—ã –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–∞ {name} –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ. –ö—ç—à–±–µ–∫ –¥–æ 350 000 ‚ÇΩ. –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è."
    }

def add_streets_to_database(all_streets):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–ª–∏—Ü –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL"""
    with app.app_context():
        added_count = 0
        
        for street_name in all_streets:
            slug = create_street_slug(street_name)
            existing = Street.query.filter_by(slug=slug).first()
            
            if not existing:
                street = Street(
                    name=street_name,
                    slug=slug,
                    district_id=None
                )
                db.session.add(street)
                added_count += 1
                print(f"‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ —É–ª–∏—Ü–∞: {street_name}")
            else:
                print(f"‚Ä¢ –£–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {street_name}")
        
        try:
            db.session.commit()
            print(f"\nüìä –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –Ω–æ–≤—ã—Ö —É–ª–∏—Ü –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –ë–î: {e}")
            return False
        
        return True

def update_streets_json(all_streets):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞ —Å —É–ª–∏—Ü–∞–º–∏"""
    json_path = 'data/streets.json'
    
    existing_streets = []
    if os.path.exists(json_path):
        try:
            with open(json_path, 'r', encoding='utf-8') as f:
                existing_streets = json.load(f)
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {json_path}: {e}")
    
    existing_names = {street['name'] for street in existing_streets}
    
    added_count = 0
    for street_name in all_streets:
        if street_name not in existing_names:
            street_data = generate_street_data(street_name)
            existing_streets.append(street_data)
            added_count += 1
            print(f"‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤ JSON: {street_name}")
    
    existing_streets.sort(key=lambda x: x['name'])
    
    os.makedirs('data', exist_ok=True)
    
    try:
        with open(json_path, 'w', encoding='utf-8') as f:
            json.dump(existing_streets, f, ensure_ascii=False, indent=2)
        print(f"\nüìÅ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} —É–ª–∏—Ü –≤ {json_path}")
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ª–∏—Ü –≤ —Ñ–∞–π–ª–µ: {len(existing_streets)}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è JSON: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —É–ª–∏—Ü—ã
    all_streets = streets_d + streets_e + streets_zh + streets_z + streets_i
    
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–ª–∏—Ü –Ω–∞ –±—É–∫–≤—ã –î, –ï, –ñ, –ó, –ò...")
    print(f"üìã –î: {len(streets_d)} —É–ª–∏—Ü")
    print(f"üìã –ï: {len(streets_e)} —É–ª–∏—Ü")
    print(f"üìã –ñ: {len(streets_zh)} —É–ª–∏—Ü") 
    print(f"üìã –ó: {len(streets_z)} —É–ª–∏—Ü")
    print(f"üìã –ò: {len(streets_i)} —É–ª–∏—Ü")
    print(f"üìã –í—Å–µ–≥–æ: {len(all_streets)} —É–ª–∏—Ü")
    print()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print("1Ô∏è‚É£  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL:")
    db_success = add_streets_to_database(all_streets)
    
    print()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º JSON —Ñ–∞–π–ª
    print("2Ô∏è‚É£  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞:")
    json_success = update_streets_json(all_streets)
    
    print()
    
    if db_success and json_success:
        print("‚úÖ –í—Å–µ —É–ª–∏—Ü—ã –Ω–∞ –±—É–∫–≤—ã –î, –ï, –ñ, –ó, –ò —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        print("üåê –¢–µ–ø–µ—Ä—å –¥–ª—è –∫–∞–∂–¥–æ–π —É–ª–∏—Ü—ã –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
        print("üîó –°—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å—É /streets/–Ω–∞–∑–≤–∞–Ω–∏–µ-—É–ª–∏—Ü—ã")
    else:
        print("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É–ª–∏—Ü")
        sys.exit(1)

if __name__ == "__main__":
    main()