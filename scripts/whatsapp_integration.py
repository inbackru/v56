#!/usr/bin/env python3
"""
WhatsApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç WhatsApp Business API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞–º
"""

import os
import requests
import json
from datetime import datetime

# WhatsApp Business API Configuration
WHATSAPP_TOKEN = os.environ.get('WHATSAPP_TOKEN', '')
WHATSAPP_PHONE_ID = os.environ.get('WHATSAPP_PHONE_ID', '')
WHATSAPP_API_VERSION = 'v17.0'
WHATSAPP_API_URL = f'https://graph.facebook.com/{WHATSAPP_API_VERSION}/{WHATSAPP_PHONE_ID}/messages'

def format_phone_number(phone):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è WhatsApp API
    –£–±–∏—Ä–∞–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    
    Args:
        phone: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è WhatsApp API
    """
    if not phone:
        return None
    
    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
    clean_phone = ''.join(filter(str.isdigit, phone))
    
    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 7 (—Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)
    if clean_phone.startswith('8') and len(clean_phone) == 11:
        clean_phone = '7' + clean_phone[1:]
    
    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7 –∏ –∏–º–µ–µ—Ç 10 —Ü–∏—Ñ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º 7
    elif len(clean_phone) == 10:
        clean_phone = '7' + clean_phone
    
    return clean_phone

def send_whatsapp_message(phone_number, message_type='text', **kwargs):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WhatsApp Business API
    
    Args:
        phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        message_type: –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (text, template, etc.)
        **kwargs: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
    """
    if not WHATSAPP_TOKEN or not WHATSAPP_PHONE_ID:
        print(f"WhatsApp credentials not configured. Message would be sent to {phone_number}")
        return True  # Return True for demo purposes
    
    formatted_phone = format_phone_number(phone_number)
    if not formatted_phone:
        print(f"Invalid phone number: {phone_number}")
        return False
    
    headers = {
        'Authorization': f'Bearer {WHATSAPP_TOKEN}',
        'Content-Type': 'application/json',
    }
    
    if message_type == 'text':
        payload = {
            'messaging_product': 'whatsapp',
            'to': formatted_phone,
            'type': 'text',
            'text': {
                'body': kwargs.get('text', '')
            }
        }
    elif message_type == 'template':
        payload = {
            'messaging_product': 'whatsapp',
            'to': formatted_phone,
            'type': 'template',
            'template': {
                'name': kwargs.get('template_name'),
                'language': {'code': 'ru'},
                'components': kwargs.get('components', [])
            }
        }
    else:
        print(f"Unsupported message type: {message_type}")
        return False
    
    try:
        response = requests.post(WHATSAPP_API_URL, headers=headers, json=payload)
        
        if response.status_code == 200:
            print(f"WhatsApp message sent successfully to {formatted_phone}")
            return True
        else:
            print(f"WhatsApp API error: {response.status_code} - {response.text}")
            return False
    
    except Exception as e:
        print(f"WhatsApp message sending failed: {e}")
        return False

def send_recommendation_whatsapp(user_phone, recommendation_data):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ WhatsApp
    
    Args:
        user_phone: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        recommendation_data: –î–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    
    Returns:
        bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    priority_emoji = {
        'urgent': 'üî•',
        'high': '‚ö°',
        'normal': 'üí°'
    }
    
    emoji = priority_emoji.get(recommendation_data.get('priority', 'normal'), 'üí°')
    
    message = f"""üè† *–ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞*

{emoji} *{recommendation_data.get('title', '')}*
üè¢ {recommendation_data.get('item_name', '')}

{recommendation_data.get('description', '')}

üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä: {recommendation_data.get('manager_name', '')}

–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç inback.ru"""
    
    return send_whatsapp_message(user_phone, 'text', text=message)

def send_saved_search_whatsapp(user_phone, search_data):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ WhatsApp
    
    Args:
        user_phone: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        search_data: –î–∞–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞
    
    Returns:
        bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    properties_count = search_data.get('properties_count', 0)
    search_name = search_data.get('search_name', '')
    
    message = f"""üîç *–ù–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø–æ –≤–∞—à–µ–º—É –ø–æ–∏—Å–∫—É*

"{search_name}"

üìä –ù–∞–π–¥–µ–Ω–æ: *{properties_count} –æ–±—ä–µ–∫—Ç–æ–≤*

üéâ –ü–æ –≤–∞—à–µ–º—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É –ø–æ–∏—Å–∫—É –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.

–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–µ –∑–∞—Ç—è–≥–∏–≤–∞—Ç—å —Å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º - —Ö–æ—Ä–æ—à–∏–µ –æ–±—ä–µ–∫—Ç—ã —Ä–∞–∑–±–∏—Ä–∞—é—Ç –±—ã—Å—Ç—Ä–æ!

–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: inback.ru"""
    
    return send_whatsapp_message(user_phone, 'text', text=message)

def send_application_status_whatsapp(user_phone, application_data):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ WhatsApp
    
    Args:
        user_phone: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        application_data: –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    
    Returns:
        bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    status_emoji = {
        'pending': '‚è≥',
        'approved': '‚úÖ',
        'rejected': '‚ùå'
    }
    
    status = application_data.get('status', 'pending')
    emoji = status_emoji.get(status, 'üìã')
    
    status_text = {
        'pending': '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
        'approved': '–æ–¥–æ–±—Ä–µ–Ω–∞',
        'rejected': '–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞'
    }
    
    message = f"""üìã *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏*

{emoji} –í–∞—à–∞ –∑–∞—è–≤–∫–∞ *{status_text.get(status, status)}*

üè† –û–±—ä–µ–∫—Ç: {application_data.get('property_name', '')}
üí∞ –ö–µ—à–±–µ–∫: {application_data.get('cashback_amount', 0):,} ‚ÇΩ

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ: inback.ru/dashboard"""
    
    return send_whatsapp_message(user_phone, 'text', text=message)

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
def send_whatsapp_notification(user, notification_type, **data):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    
    Args:
        user: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        notification_type: –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        **data: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    
    Returns:
        bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    if not hasattr(user, 'phone') or not user.phone:
        return False
    
    if notification_type == 'recommendation':
        return send_recommendation_whatsapp(user.phone, data)
    elif notification_type == 'saved_search_results':
        return send_saved_search_whatsapp(user.phone, data)
    elif notification_type == 'application_status':
        return send_application_status_whatsapp(user.phone, data)
    else:
        # –û–±—â–µ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        message = f"""üì± *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ InBack*

{data.get('subject', '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')}

{data.get('message', '')}

inback.ru"""
        return send_whatsapp_message(user.phone, 'text', text=message)

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    test_phone = "+7900000000"  # –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä
    test_data = {
        'title': '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è',
        'item_name': '–ñ–ö –¢–µ—Å—Ç–æ–≤—ã–π',
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞',
        'manager_name': '–¢–µ—Å—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä',
        'priority': 'high'
    }
    
    result = send_recommendation_whatsapp(test_phone, test_data)
    print(f"WhatsApp test result: {result}")