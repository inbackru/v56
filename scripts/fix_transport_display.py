#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω–µ
"""

def fix_transport_data_display():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω
    with open('templates/district_unified.html', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    replacements = [
        (r'\{\{(\s*)district_data\.transport\.bus_routes(\s*)\|string\|replace\([^}]+\)\}\}',
         r'{{ district_data.transport.bus_routes|e }}'),
        (r'\{\{(\s*)district_data\.transport\.tram_routes(\s*)\|string\|replace\([^}]+\)\}\}',
         r'{{ district_data.transport.tram_routes|e }}'),
        (r'\{\{(\s*)district_data\.transport\.trolleybus_routes(\s*)\|string\|replace\([^}]+\)\}\}',
         r'{{ district_data.transport.trolleybus_routes|e }}'),
    ]
    
    import re
    for pattern, replacement in replacements:
        content = re.sub(pattern, replacement, content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open('templates/district_unified.html', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –£–ø—Ä–æ—â–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

def add_transport_filter_to_app():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    with open('app.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ñ–∏–ª—å—Ç—Ä
    if 'clean_transport_data' in content:
        print("‚úÖ –§–∏–ª—å—Ç—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return
    
    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è app)
    filter_code = '''
@app.template_filter('clean_transport')
def clean_transport_data(value):
    """–û—á–∏—â–∞–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
    if not value:
        return ""
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –∏ —É–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏
    str_value = str(value)
    
    # –£–±–∏—Ä–∞–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∏ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
    str_value = str_value.strip("'\"")
    
    # –£–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    str_value = str_value.replace("{'", "").replace("'}", "").replace('{"', "").replace('"}', "")
    
    return str_value
'''
    
    # –ò—â–µ–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è app, –Ω–æ –ø–µ—Ä–µ–¥ routes
    import re
    pattern = r'(app = Flask\(__name__\).*?\n)(.*?)(@app\.route|def.*?\(\):)'
    
    match = re.search(pattern, content, re.DOTALL)
    if match:
        content = content[:match.end(1)] + filter_code + '\n' + content[match.start(3):]
    else:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü –∏–º–ø–æ—Ä—Ç–æ–≤
        lines = content.split('\n')
        insert_idx = -1
        for i, line in enumerate(lines):
            if line.startswith('from ') or line.startswith('import '):
                insert_idx = i
        
        if insert_idx > 0:
            lines.insert(insert_idx + 1, filter_code)
            content = '\n'.join(lines)
    
    with open('app.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

def update_template_with_filter():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞"""
    
    with open('templates/district_unified.html', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å–ª–æ–∂–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π
    content = content.replace('|string|replace("\'", "")|replace(\'"\'', \'\')', '|clean_transport')
    content = content.replace('district_data.transport.bus_routes|e', 'district_data.transport.bus_routes|clean_transport')
    content = content.replace('district_data.transport.tram_routes|e', 'district_data.transport.tram_routes|clean_transport')
    content = content.replace('district_data.transport.trolleybus_routes|e', 'district_data.transport.trolleybus_routes|clean_transport')
    
    with open('templates/district_unified.html', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –®–∞–±–ª–æ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    add_transport_filter_to_app()
    update_template_with_filter()
    
    print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("‚úÖ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤")

if __name__ == "__main__":
    main()