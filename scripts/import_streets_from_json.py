#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

def translit_to_slug(text):
    """–°–æ–∑–¥–∞–µ—Ç slug –∏–∑ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    translit_map = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e',
        '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
        '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
        '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
        ' ': '-', '.': '', ',': '', '(': '', ')': '', '‚Ññ': 'n'
    }
    
    result = ''
    for char in text.lower():
        if char in translit_map:
            result += translit_map[char]
        elif char.isalpha() or char.isdigit() or char == '-':
            result += char
    
    # –£–±–∏—Ä–∞–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –¥–µ—Ñ–∏—Å—ã –∏ –ø—Ä–æ–±–µ–ª—ã
    while '--' in result:
        result = result.replace('--', '-')
    
    return result.strip('-')

def import_streets_from_json():
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —É–ª–∏—Ü—ã –∏–∑ JSON –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    database_url = os.environ.get('DATABASE_URL')
    if not database_url:
        print("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        engine = create_engine(database_url)
        Session = sessionmaker(bind=engine)
        session = Session()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª —Å —É–ª–∏—Ü–∞–º–∏
        with open('data/streets.json', 'r', encoding='utf-8') as f:
            streets_data = json.load(f)
        
        print(f"üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(streets_data)} —É–ª–∏—Ü –∏–∑ JSON —Ñ–∞–π–ª–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ª–∏—Ü –≤ –±–∞–∑–µ
        result = session.execute(text("SELECT COUNT(*) as count FROM streets")).fetchone()
        current_count = result.count
        print(f"üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ª–∏—Ü –≤ –±–∞–∑–µ: {current_count}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö slug'–æ–≤
        existing_slugs = set()
        existing_streets = session.execute(text("SELECT slug FROM streets")).fetchall()
        for street in existing_streets:
            existing_slugs.add(street.slug)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–ª–∏—Ü—ã
        imported_count = 0
        skipped_count = 0
        
        for street in streets_data:
            name = street['name']
            slug = translit_to_slug(name)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è —É–ª–∏—Ü–∞
            if slug in existing_slugs:
                skipped_count += 1
                continue
            
            try:
                # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —É–ª–∏—Ü—É
                session.execute(text("""
                    INSERT INTO streets (name, slug, zoom_level, created_at, updated_at) 
                    VALUES (:name, :slug, 15, NOW(), NOW())
                """), {
                    'name': name,
                    'slug': slug
                })
                
                existing_slugs.add(slug)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
                imported_count += 1
                
                if imported_count % 100 == 0:
                    print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_count} —É–ª–∏—Ü...")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —É–ª–∏—Ü—ã '{name}': {e}")
                continue
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        session.close()
        
        print(f"\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤—ã—Ö —É–ª–∏—Ü: {imported_count}")
        print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {skipped_count}")
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ª–∏—Ü: {current_count + imported_count}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    success = import_streets_from_json()
    if success:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:")
        print("python run_coordinates_batch.py 500")
    else:
        sys.exit(1)